"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[55446],{29969:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/v1.0-92cfbbbcd27cb6dd1411dbd29b0f1985.png"},43023:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var s=t(63696);const o={},i=s.createContext(o);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:n},e.children)}},47523:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var s=t(96273),o=t(62540),i=t(43023);const r={slug:"moon-v1.0",title:"moon v1.0 - Official release! Project constraints, tagging, and more!",authors:["milesj"],tags:["projects","constraints","tags","env-vars","tokens"],image:"./img/moon/v1.0.png"},a=void 0,l={image:t(29969).A,authorsImageUrls:[void 0]},c=[{value:"The road to v1",id:"the-road-to-v1",level:2},{value:"Project boundaries with constraints",id:"project-boundaries-with-constraints",level:2},{value:"Project tagging",id:"project-tagging",level:2},{value:"Querying projects by tag",id:"querying-projects-by-tag",level:3},{value:"Enforce relationships with tags",id:"enforce-relationships-with-tags",level:3},{value:"Shells for system tasks",id:"shells-for-system-tasks",level:2},{value:"Environment variable substitution",id:"environment-variable-substitution",level:2},{value:"Date/time token variables",id:"datetime-token-variables",level:2},{value:"Other changes",id:"other-changes",level:2},{value:"What&#39;s next?",id:"whats-next",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"\ud83c\udf89 It's finally here! After almost a year of development, a handful of breaking changes, we've\nofficially reached a stable v1 of moon! This release is feature packed with quality of life\nimprovements."}),"\n",(0,o.jsx)(n.h2,{id:"the-road-to-v1",children:"The road to v1"}),"\n",(0,o.jsx)(n.p,{children:"It's been 10 months since moon launched publicly, and since that time we have landed 501 pull\nrequests, fixed 100's of bugs, made 16 breaking changes, released 26 versions, and have been used by\ncompanies like Ikea, SumUp, Depot, and Gallery. It's been a wild ride, and we're excited to finally\nreach a stable v1 release."}),"\n",(0,o.jsx)(n.h2,{id:"project-boundaries-with-constraints",children:"Project boundaries with constraints"}),"\n",(0,o.jsxs)(n.p,{children:["One feature that moon has not supported, but is critical for large monorepos, is project boundaries.\nA project boundary is a concept that enforces a strict relationship between projects, and is a\ncommon pattern in monorepos. For example, a project may only be allowed to depend on projects with a\n",(0,o.jsx)(n.a,{href:"#enforce-relationships-with-tags",children:"specific tag"}),", or a project of a specific type."]}),"\n",(0,o.jsxs)(n.p,{children:["moon now supports this functionality through the new\n",(0,o.jsx)(n.a,{href:"/docs/config/workspace#constraints",children:(0,o.jsx)(n.code,{children:"constraints"})})," setting in\n",(0,o.jsx)(n.a,{href:"/docs/config/workspace",children:(0,o.jsx)(n.code,{children:".moon/workspace.yml"})}),". The primary constraint we're introducing is\n",(0,o.jsx)(n.a,{href:"/docs/config/workspace#enforceprojecttyperelationships",children:(0,o.jsx)(n.code,{children:"enforceProjectTypeRelationships"})}),", which\nenforces relationships between projects based on their ",(0,o.jsx)(n.a,{href:"/docs/config/project#type",children:(0,o.jsx)(n.code,{children:"type"})})," field."]}),"\n",(0,o.jsxs)(n.p,{children:["For example, an application can only depend on library or tool based projects, but ",(0,o.jsx)(n.em,{children:"not"})," other\napplications (this is a code smell). This setting is enabled by default!"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",metastring:'title=".moon/workspace.yml"',children:"constraints:\n  enforceProjectTypeRelationships: true\n"})}),"\n",(0,o.jsx)(n.p,{children:"And that's not all, continue reading for more information on tag based constraints!"}),"\n",(0,o.jsx)(n.h2,{id:"project-tagging",children:"Project tagging"}),"\n",(0,o.jsxs)(n.p,{children:["Everyone is familiar with the concept of tagging, and moon's implementation is no different. Tags\nare a simple mechanism for categorizing projects, and can be defined through the\n",(0,o.jsx)(n.a,{href:"/docs/config/project#tags",children:(0,o.jsx)(n.code,{children:"tags"})})," setting in ",(0,o.jsx)(n.a,{href:"/docs/config/project",children:(0,o.jsx)(n.code,{children:"moon.yml"})}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml"',children:"tags:\n  - 'react'\n  - 'prisma'\n"})}),"\n",(0,o.jsx)(n.p,{children:"Tags can be used to group projects together for easier querying, enforcing of project boundaries,\napplying constraints, and more in the future. Tags will become a staple for maintaining repositories\nat scale. Continue reading for more information!"}),"\n",(0,o.jsx)(n.h3,{id:"querying-projects-by-tag",children:"Querying projects by tag"}),"\n",(0,o.jsxs)(n.p,{children:["The first integration with tags is project querying. You can now query for projects by tag using the\nnew ",(0,o.jsx)(n.code,{children:"--tags"})," option in the ",(0,o.jsx)(n.a,{href:"/docs/commands/query/projects",children:(0,o.jsx)(n.code,{children:"moon query projects"})})," command. For\nexample, say you want to find all projects that are tagged with ",(0,o.jsx)(n.code,{children:"vue"})," or ",(0,o.jsx)(n.code,{children:"trpc"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"$ moon query projects --tags 'vue|trpc'\n"})}),"\n",(0,o.jsx)(n.h3,{id:"enforce-relationships-with-tags",children:"Enforce relationships with tags"}),"\n",(0,o.jsxs)(n.p,{children:["Another feature of tags is enforcing relationships between projects using our new\n",(0,o.jsx)(n.a,{href:"#project-boundaries-with-constraints",children:(0,o.jsx)(n.code,{children:"constraints"})})," setting. When a tagged constraint is defined,\nit requires all ",(0,o.jsx)(n.a,{href:"/docs/concepts/project#dependencies",children:"dependencies"})," of a tagged project to require 1\nof the configured tags, otherwise an error is thrown during project graph creation."]}),"\n",(0,o.jsx)(n.p,{children:"To demonstrate this, take the following configuration:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",metastring:'title=".moon/workspace.yml" {2,3}',children:"constraints:\n  tagRelationships:\n    next: ['react', 'trpc']\n"})}),"\n",(0,o.jsxs)(n.p,{children:["This dictates that all dependencies of a project with the ",(0,o.jsx)(n.code,{children:"next"})," tag, must declare either ",(0,o.jsx)(n.code,{children:"react"}),",\n",(0,o.jsx)(n.code,{children:"trpc"}),", or ",(0,o.jsx)(n.code,{children:"next"})," in their own tags. This is great for crafting a monorepo with strict project\nboundaries!"]}),"\n",(0,o.jsx)(n.h2,{id:"shells-for-system-tasks",children:"Shells for system tasks"}),"\n",(0,o.jsx)(n.p,{children:"Up until now, all executed tasks would not be wrapped in a shell for 1 reason, to ensure tasks are\ndeterministic. A major goal for moon is that tasks are deterministic and easily reproducible across\nall machines. Shells break this guarantee, as they can introduce subtle bugs that are difficult to\ndiagnose, and may differ wildly between developers and machines."}),"\n",(0,o.jsxs)(n.p,{children:["However in practice, not supporting shells has been a major pain point for many users, and for the\nmost part, most system tasks typically run common commands or execute pre-defined scripts. The\nchance of a non-deterministic build is very small. As such, we've decided to make a compromise, and\nallow shells for ",(0,o.jsx)(n.a,{href:"/docs/config/project#platform-1",children:"system tasks"}),", but not for language based tasks."]}),"\n",(0,o.jsx)(n.p,{children:"For example, the following tasks:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml"',children:"tasks:\n  example:\n    command: 'echo $PWD'\n    platform: 'system'\n  global:\n    command: 'bin-on-path'\n    platform: 'system'\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Would now be executed as ",(0,o.jsx)(n.code,{children:"/bin/sh -c 'echo $PWD'"})," and ",(0,o.jsx)(n.code,{children:"/bin/sh -c 'bin-on-path'"})," on Unix platforms\nrespectively. On Windows, we execute tasks with ",(0,o.jsx)(n.code,{children:"pwsh.exe -c"})," and pass arguments via stdin."]}),"\n",(0,o.jsxs)(n.p,{children:["We're also taking this a step further, by introducing a new task option called\n",(0,o.jsx)(n.a,{href:"/docs/config/project#shell",children:(0,o.jsx)(n.code,{children:"shell"})}),", that can be used to toggle the shell wrapping on or off. When\nturned off, this allows you to customize and execute the shell as you please."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml"',children:"tasks:\n  example:\n    command: 'bash -c \"echo $PWD\"'\n    platform: 'system'\n    options:\n      shell: false\n"})}),"\n",(0,o.jsx)(n.h2,{id:"environment-variable-substitution",children:"Environment variable substitution"}),"\n",(0,o.jsxs)(n.p,{children:["moon supports granular environment variables through the project-level\n",(0,o.jsx)(n.a,{href:"/docs/config/project#env",children:(0,o.jsx)(n.code,{children:"env"})})," setting, task-level ",(0,o.jsx)(n.a,{href:"/docs/config/project#env-1",children:(0,o.jsx)(n.code,{children:"env"})})," setting,\nand the task ",(0,o.jsx)(n.a,{href:"/docs/config/project#envfile",children:(0,o.jsx)(n.code,{children:"envFile"})})," option. We're expanding their functionality\nwith variable substitution, allowing the value of another environment variable to be interpolated\nusing the syntax ",(0,o.jsx)(n.code,{children:"${VAR_NAME}"}),". This is especially useful for composing complex environment\nvariables."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml"',children:"tasks:\n  dev:\n    command: 'app start'\n    env:\n      APP_TARGET: '${REGION}-${ENVIRONMENT}'\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The same substitution syntax can also be used within ",(0,o.jsx)(n.code,{children:".env"})," files."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-toml",metastring:'title=".env"',children:'APP_TARGET="${REGION}-${ENVIRONMENT}"\n'})}),"\n",(0,o.jsx)(n.h2,{id:"datetime-token-variables",children:"Date/time token variables"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"/docs/concepts/token",children:"Tokens"})," are a mechanism used in task configuration for dynamically injecting\nvalues from the current project or task, especially when task inheritance is involved. Tokens have\nexisted since moon's inception, without much change... until now."]}),"\n",(0,o.jsxs)(n.p,{children:["We're excited to introduce a new set of tokens for referencing the\n",(0,o.jsx)(n.a,{href:"/docs/concepts/token#datetime",children:"current date or time"}),": ",(0,o.jsx)(n.code,{children:"$date"}),", ",(0,o.jsx)(n.code,{children:"$time"}),", ",(0,o.jsx)(n.code,{children:"$datetime"}),", and\n",(0,o.jsx)(n.code,{children:"$timestamp"}),". With these new tokens, you're now able to implement clever or unusual solutions, like\ngrouping builds or deploys based on the current timestamp."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml"',children:"tasks:\n  deploy:\n    command: 'app deploy --output ./build/$timestamp'\n"})}),"\n",(0,o.jsx)(n.h2,{id:"other-changes",children:"Other changes"}),"\n",(0,o.jsxs)(n.p,{children:["View the ",(0,o.jsx)(n.a,{href:"https://github.com/moonrepo/moon/releases/tag/v1.0.0",children:"official release"})," for a full list of\nchanges."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Added a ",(0,o.jsx)(n.code,{children:"hasher.warnOnMissingInputs"})," setting to ",(0,o.jsx)(n.code,{children:".moon/workspace.yml"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["Added a ",(0,o.jsx)(n.code,{children:"$projectAlias"})," task token."]}),"\n",(0,o.jsxs)(n.li,{children:["Added a ",(0,o.jsx)(n.code,{children:"telemetry"})," setting to ",(0,o.jsx)(n.code,{children:".moon/workspace.yml"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["Updated the new version check to only run on the ",(0,o.jsx)(n.code,{children:"check"}),", ",(0,o.jsx)(n.code,{children:"ci"}),", ",(0,o.jsx)(n.code,{children:"run"}),", and ",(0,o.jsx)(n.code,{children:"sync"})," commands."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"whats-next",children:"What's next?"}),"\n",(0,o.jsx)(n.p,{children:"Expect the following in the v1.1 release!"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Polish and stability initiatives."}),"\n",(0,o.jsx)(n.li,{children:"Task inheritance based on tags."}),"\n",(0,o.jsx)(n.li,{children:"Deno tier 3 support."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},96273:e=>{e.exports=JSON.parse('{"permalink":"/blog/moon-v1.0","editUrl":"https://github.com/moonrepo/moon/tree/master/website/blog/2023-03-27_moon-v1.0.mdx","source":"@site/blog/2023-03-27_moon-v1.0.mdx","title":"moon v1.0 - Official release! Project constraints, tagging, and more!","description":"\ud83c\udf89 It\'s finally here! After almost a year of development, a handful of breaking changes, we\'ve","date":"2023-03-27T00:00:00.000Z","tags":[{"inline":true,"label":"projects","permalink":"/blog/tags/projects"},{"inline":true,"label":"constraints","permalink":"/blog/tags/constraints"},{"inline":true,"label":"tags","permalink":"/blog/tags/tags"},{"inline":true,"label":"env-vars","permalink":"/blog/tags/env-vars"},{"inline":true,"label":"tokens","permalink":"/blog/tags/tokens"}],"readingTime":5.12,"hasTruncateMarker":true,"authors":[{"name":"Miles Johnson","title":"Founder, developer","url":"https://github.com/milesj","imageURL":"/img/authors/miles.jpg","key":"milesj","page":null}],"frontMatter":{"slug":"moon-v1.0","title":"moon v1.0 - Official release! Project constraints, tagging, and more!","authors":["milesj"],"tags":["projects","constraints","tags","env-vars","tokens"],"image":"./img/moon/v1.0.png"},"unlisted":false,"prevItem":{"title":"proto v0.4 - Rust support, user configs, and more","permalink":"/blog/proto-v0.4"},"nextItem":{"title":"proto v0.3 - Improved npm, go, and version requirement support","permalink":"/blog/proto-v0.3"}}')}}]);