"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[58855],{41940:e=>{e.exports=JSON.parse('{"permalink":"/blog/2024-roadmap","editUrl":"https://github.com/moonrepo/moon/tree/master/website/blog/2024-01-12_2024-roadmap.mdx","source":"@site/blog/2024-01-12_2024-roadmap.mdx","title":"What\'s in store for 2024","description":"Happy new year! Let\'s start 2024 by reflecting on last year and diving into our tentative year long","date":"2024-01-12T00:00:00.000Z","tags":[{"inline":true,"label":"roadmap","permalink":"/blog/tags/roadmap"},{"inline":true,"label":"moonbase","permalink":"/blog/tags/moonbase"},{"inline":true,"label":"proto","permalink":"/blog/tags/proto"},{"inline":true,"label":"toolchain","permalink":"/blog/tags/toolchain"}],"readingTime":7.08,"hasTruncateMarker":true,"authors":[{"name":"Miles Johnson","title":"Founder, developer","url":"https://github.com/milesj","imageURL":"/img/authors/miles.jpg","key":"milesj","page":null}],"frontMatter":{"slug":"2024-roadmap","title":"What\'s in store for 2024","authors":["milesj"],"tags":["roadmap","moonbase","proto","toolchain"]},"unlisted":false,"prevItem":{"title":"proto v0.28 - Upgraded WASM runtime","permalink":"/blog/proto-v0.28"},"nextItem":{"title":"proto v0.27 - PowerShell profiles, shim regeneration, and more","permalink":"/blog/proto-v0.27"}}')},43023:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>s});var i=o(63696);const t={},a=i.createContext(t);function r(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(a.Provider,{value:n},e.children)}},53928:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>d});var i=o(41940),t=o(62540),a=o(43023);const r={slug:"2024-roadmap",title:"What's in store for 2024",authors:["milesj"],tags:["roadmap","moonbase","proto","toolchain"]},s=void 0,l={authorsImageUrls:[void 0]},d=[{value:"Year 2023 in review",id:"year-2023-in-review",level:2},{value:"moon",id:"moon",level:3},{value:"moonbase",id:"moonbase",level:3},{value:"proto",id:"proto",level:3},{value:"Launching moon v2",id:"launching-moon-v2",level:2},{value:"Plugin based architecture",id:"plugin-based-architecture",level:3},{value:"Post-launch features",id:"post-launch-features",level:3},{value:"Launching proto v1",id:"launching-proto-v1",level:2},{value:"Expanding language support",id:"expanding-language-support",level:3},{value:"Self-hosting moonbase",id:"self-hosting-moonbase",level:2},{value:"Looking for contributors",id:"looking-for-contributors",level:2}];function h(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Happy new year! Let's start 2024 by reflecting on last year and diving into our tentative year long\nroadmap."}),"\n",(0,t.jsx)(n.h2,{id:"year-2023-in-review",children:"Year 2023 in review"}),"\n",(0,t.jsxs)(n.p,{children:["Last year was an extremely exciting year for us! To start, we were accepted into the\n",(0,t.jsx)(n.a,{href:"https://www.ycombinator.com/companies/moonrepo",children:"Y Combinator 2023 winter batch"}),", which was\nextremely unexpected, but very much welcome. The 3 months we spent in YC was quite eye opening, as\nwe learned so much about the industry, and how to move forward. We spent those 3 months really\ndiving into what we want to build and deliver, and after much trial and error, and many failed\nprototypes, we chose to move forward with launching ",(0,t.jsx)(n.a,{href:"/proto",children:"proto"})," as its own tool, improving\n",(0,t.jsx)(n.a,{href:"/moon",children:"moon"}),", and slowing down development of ",(0,t.jsx)(n.a,{href:"/moonbase",children:"moonbase"})," (outside of remote caching)."]}),"\n",(0,t.jsx)(n.h3,{id:"moon",children:"moon"}),"\n",(0,t.jsxs)(n.p,{children:["For ",(0,t.jsx)(n.a,{href:"/moon",children:"moon"}),", we officially launched v1 back in March, and celebrated its 2 year birthday in\nOctober. Over the course of 2023, we released 23 minor versions, jam packed with new features such\nas:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Action and project graphs improvements"}),"\n",(0,t.jsx)(n.li,{children:"Bun tier 1, 2, and 3 support"}),"\n",(0,t.jsx)(n.li,{children:"Canary & nightly releases"}),"\n",(0,t.jsxs)(n.li,{children:["Code ownership (",(0,t.jsx)(n.code,{children:"CODEOWNERS"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:["Configuration rewrite (using our ",(0,t.jsx)(n.a,{href:"https://github.com/moonrepo/schematic",children:"schematic"})," crate)"]}),"\n",(0,t.jsx)(n.li,{children:"Deno tier 1 and 2 support"}),"\n",(0,t.jsx)(n.li,{children:"Developer experience improvements"}),"\n",(0,t.jsx)(n.li,{children:"Documentation polish"}),"\n",(0,t.jsx)(n.li,{children:"Experiments"}),"\n",(0,t.jsx)(n.li,{children:"Interactive & persistent tasks"}),"\n",(0,t.jsx)(n.li,{children:"JavaScript and TypeScript improvements"}),"\n",(0,t.jsx)(n.li,{children:"Onboarding flow improvements"}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"PATH"})," based task execution"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/proto",children:"proto"})," integration"]}),"\n",(0,t.jsx)(n.li,{children:"Query language"}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://railway.app/",children:"Railway"})," support"]}),"\n",(0,t.jsx)(n.li,{children:"Rust tier 1, 2, and 3 support"}),"\n",(0,t.jsx)(n.li,{children:"Tagging and boundaries/contraints"}),"\n",(0,t.jsx)(n.li,{children:"Task extending, inheritance, and configuration enhancements"}),"\n",(0,t.jsx)(n.li,{children:"Task dependencies configurations"}),"\n",(0,t.jsx)(n.li,{children:"Toolchain enhancements"}),"\n",(0,t.jsx)(n.li,{children:"VCS (Git) hooks"}),"\n",(0,t.jsx)(n.li,{children:"... and much much more!"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["However, when looking at our ",(0,t.jsx)(n.a,{href:"./2023-roadmap",children:"2023 roadmap"}),", there are a few items we failed to\ndeliver on. The biggest are additional languages, better tier support, and release workflows. We\nultimately didn't land these features as we plan to move to a plugin based architecture, and didn't\nwant to invest too much time into the current implementation."]}),"\n",(0,t.jsx)(n.h3,{id:"moonbase",children:"moonbase"}),"\n",(0,t.jsxs)(n.p,{children:["During YC, we officially launched ",(0,t.jsx)(n.a,{href:"/moonbase",children:"moonbase"}),", our cloud service that offers remote caching\nto all moon users (and also includes a free tier). Over the next few months, we continued to improve\nthe service, by adding basic insights into CI runs (powered by ",(0,t.jsx)(n.a,{href:"/docs/commands/ci",children:(0,t.jsx)(n.code,{children:"moon ci"})}),"), and\noverall stability."]}),"\n",(0,t.jsx)(n.p,{children:"However, we unfortunately made the decision to pause development of new features for moonbase, as we\nwere unsure of the value that they would provide to end-users compared to the cost it would take to\nbuild & maintain. Some such features include code and project ownership, project registry, and\nrepository health scores. We may revisit this in the future."}),"\n",(0,t.jsx)(n.h3,{id:"proto",children:"proto"}),"\n",(0,t.jsxs)(n.p,{children:["As for ",(0,t.jsx)(n.a,{href:"/proto",children:"proto"}),", it's been an exciting year. For context, proto's implementation was\noriginally built into moon directly, and powered\n",(0,t.jsx)(n.a,{href:"/docs/concepts/toolchain",children:"moon's integrated toolchain"}),". We strongly felt this functionality can be\nuseful as a stand-alone tool, as tool installation and developer environment setup is still a major\npain point for developers."]}),"\n",(0,t.jsx)(n.p,{children:"So we decided to extract it out into its own tool, and thus proto was born. Since then, we've\nreleased 27 minor versions with:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Additional language support: Go, Python"}),"\n",(0,t.jsx)(n.li,{children:"Binary symlinking"}),"\n",(0,t.jsx)(n.li,{children:"Canary & nightly releases"}),"\n",(0,t.jsx)(n.li,{children:"Detection improvements"}),"\n",(0,t.jsx)(n.li,{children:"Directory-level configuration"}),"\n",(0,t.jsx)(n.li,{children:"Deeper shell integration"}),"\n",(0,t.jsx)(n.li,{children:"Global packages support"}),"\n",(0,t.jsx)(n.li,{children:"Native shim executables"}),"\n",(0,t.jsx)(n.li,{children:"Runtime version detection"}),"\n",(0,t.jsx)(n.li,{children:"WASM and TOML based plugins"}),"\n",(0,t.jsx)(n.li,{children:"... and more to come!"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"launching-moon-v2",children:"Launching moon v2"}),"\n",(0,t.jsx)(n.p,{children:"It's been almost a year since we launched v1, and we believe we're ready to start planning out and\nworking on v2. Our goal for major releases is to introduce breaking changes in the most seamless way\npossible, and to do so, we plan to incrementally land internal changes in v1 in preparation for v2,\nprovide codemods for migrating configuration, and of course, provide an in-depth migration guide."}),"\n",(0,t.jsxs)(n.p,{children:["In order of importance, we plan to land the following changes. This list does not include features\nthat will ",(0,t.jsx)(n.a,{href:"#post-launch-features",children:"land after v2"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Move to a ",(0,t.jsx)(n.a,{href:"#plugin-based-architecture",children:"plugin based architecture"})]}),"\n",(0,t.jsx)(n.li,{children:"Rename and standardize some configuration settings"}),"\n",(0,t.jsx)(n.li,{children:"Removed deprecated features"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"It's a short list but also a ton of work. We have no ETA on when this will land exactly."}),"\n",(0,t.jsx)(n.h3,{id:"plugin-based-architecture",children:"Plugin based architecture"}),"\n",(0,t.jsxs)(n.p,{children:["The biggest change and primary focus for v2 is to move to a WASM plugin based architecture (for\nlanguage integration). Based on our work with ",(0,t.jsx)(n.a,{href:"/docs/proto/plugins",children:"proto's plugins"}),", we have a very\ngood idea of how we would model this for moon, and a new love for WASM based plugins (powered by\n",(0,t.jsx)(n.a,{href:"https://extism.org/",children:"Extism"}),")."]}),"\n",(0,t.jsx)(n.p,{children:"One of the leading factors for this decision, is that building everything into Rust directly is not\nscalable, is a maintenance headache, and is also extremely difficult. It results in a lot of\nduplicated code, increased compilation times, and a lot of complexity. By moving to plugins, we can\nditch most of this, and in the grand scheme of things, plugin integration is simply function calls."}),"\n",(0,t.jsx)(n.p,{children:"Of course there are a handful of additional benefits that come from plugins:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Enables the community to build and share their own plugins (additional languages)."}),"\n",(0,t.jsx)(n.li,{children:"Plugins can be individually updated, versioned, and released. Less moon patches."}),"\n",(0,t.jsx)(n.li,{children:"Reduces moon's compilation times, as plugins live in their own repositories."}),"\n",(0,t.jsx)(n.li,{children:"Easier to contribute to, as moon's codebase is quite complex."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"post-launch-features",children:"Post-launch features"}),"\n",(0,t.jsx)(n.p,{children:"Curious what kind of features we have planned for after v2? Of course you are! This isn't an\nexhaustive or detailed list, but is top of mind:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Additional languages support (will be much easier with a plugin system)"}),"\n",(0,t.jsx)(n.li,{children:"Release workflows (versioning, publishing, changelogs, etc)"}),"\n",(0,t.jsx)(n.li,{children:"System dependencies within the toolchain"}),"\n",(0,t.jsx)(n.li,{children:"Language dependency management tools"}),"\n",(0,t.jsx)(n.li,{children:"Repository and project health scores"}),"\n",(0,t.jsx)(n.li,{children:"Improved action graph and pipeline"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"launching-proto-v1",children:"Launching proto v1"}),"\n",(0,t.jsx)(n.p,{children:"We're extremely close to a v1 release, most definitely in Q1. For the most part, we believe we're\npassed the point of introducing breaking changes, and so the remainder of the time will be spent on\npolish, improvements, and documentation. There are a few big features we want to land relatively\nsoon though (but maybe after v1), and they are:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Build from source for languages (this is quite complicated)"}),"\n",(0,t.jsx)(n.li,{children:"Build/extension variants for languages (PyPy for Python, PHP extensions, etc)"}),"\n",(0,t.jsxs)(n.li,{children:["Directory and tool level environment variables (think ",(0,t.jsx)(n.a,{href:"https://direnv.net/",children:"direnv"})," kind of\nfunctionality)"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"expanding-language-support",children:"Expanding language support"}),"\n",(0,t.jsx)(n.p,{children:"While not part of v1, we definitely want to support more official languages in proto. We've been\npushing back on new languages until after v1 and the plugin APIs have stabilized, but since that's\nrelatively close to being done, expect more in the future! Our top of mind languages at the moment\nare: Ruby (and Crystal), PHP, and Java."}),"\n",(0,t.jsxs)(n.p,{children:["Don't forget that the community can also build and share their own plugins! For example, the\n",(0,t.jsx)(n.a,{href:"https://github.com/konomae/zig-plugin",children:"Zig programming language"})," already exists, and is provided by\n",(0,t.jsx)(n.a,{href:"https://github.com/konomae",children:"konomae"}),"! Thanks for the amazing work."]}),"\n",(0,t.jsx)(n.h2,{id:"self-hosting-moonbase",children:"Self-hosting moonbase"}),"\n",(0,t.jsx)(n.p,{children:"And last but not least, let's talk about moonbase. Although we've paused development on new\nfeatures, we consistently get requests for self-hosting moonbase (primarily for remote caching), as\ncompanies don't want to store their proprietary builds, even though they are compiled and minified,\nin a cloud storage provider that they do not own."}),"\n",(0,t.jsx)(n.p,{children:"We definitely understand this concern, and that's why we've been working on a self-hosted version of\nmoonbase (also known as on-premises). We've never done this before, so it's been quite a learning\nlesson, especially since we have many facets to take into account: database access, cloud\ncredentials, error handling, auth, so on and so forth."}),"\n",(0,t.jsxs)(n.p,{children:["We'd say we're about 50% done with this effort, and we aim to have it ready by the end of Q1. With\nthat said, the self-hosted version of moonbase will ",(0,t.jsx)(n.em,{children:"not"})," be free, and will use a license based\nmodel. We're still working out the details, but we'll have more information soon."]}),"\n",(0,t.jsx)(n.h2,{id:"looking-for-contributors",children:"Looking for contributors"}),"\n",(0,t.jsx)(n.p,{children:"Thanks for reading this far, but we do have one last thing to talk about. The moonrepo ecosystem and\nall its products are quite large, with a lot of complexity. However, we're a small team, with most\nof the public-facing work being done by me (Miles), but there's only so much we can do in a given\ntimeframe. With that said, we're looking for open source contributors that would like to help us\nout! We have a long list of features and enhancements that need to be done, and even some secret\nprojects that would be very cool to work on. If you're interested, please reach out to us on\nDiscord!"})]})}function c(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}}}]);