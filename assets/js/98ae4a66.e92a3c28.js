"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[92559],{29366:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>t,toc:()=>h});var t=o(79097),r=o(62540),i=o(43023);const s={slug:"proto-v0.14",title:"proto v0.14 - Node.js and Rust now powered by WASM plugins",authors:["milesj"],tags:["proto","wasm","plugin"]},l=void 0,a={authorsImageUrls:[void 0]},h=[{value:"Full migration to WASM",id:"full-migration-to-wasm",level:2},{value:"Breaking changes for TOML plugins",id:"breaking-changes-for-toml-plugins",level:2},{value:"Other changes",id:"other-changes",level:2}];function c(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"With this release, we've finished our migration to a WASM based plugin architecture."}),"\n",(0,r.jsx)(n.h2,{id:"full-migration-to-wasm",children:"Full migration to WASM"}),"\n",(0,r.jsxs)(n.p,{children:["In ",(0,r.jsx)(n.a,{href:"./proto-v0.13",children:"our last release"}),", we migrated the Bun, Deno, and Go plugins to WASM. In this\nrelease, we're excited to announce that we have completed our WASM migration by also converting\nNode.js (and npm, etc) and Rust to WASM plugins. We've also updated our TOML plugin layer to use\nWASM under the hood."]}),"\n",(0,r.jsx)(n.p,{children:"With this, 100% of our tools are now powered by WASM, and the APIs are stable enough for you, the\nconsumers, to build your own plugins! We have plans for additional APIs in the next release,\nprimarily installing and uninstall globals, and a hooks system, so look forward to that! To learn\nmore about our official plugins, check out the their repositories!"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/moonrepo/bun-plugin",children:"Bun"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/moonrepo/deno-plugin",children:"Deno"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/moonrepo/go-plugin",children:"Go"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/moonrepo/node-plugin",children:"Node"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/moonrepo/rust-plugin",children:"Rust"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/moonrepo/schema-plugin",children:"Schema"})}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["This release may seem light, but we\n",(0,r.jsx)(n.a,{href:"https://github.com/moonrepo/proto/pull/161",children:"rewrote the entire core"})," from the ground up to support\na pure plugin based architecture. This was a lot of work, but our implementation is far easier to\nwork with, and more robust. As part of this process, we improved version and range handling, archive\nunpacking, and much more!"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Because of the rewrite, we may have introduced a few bugs. Please report any issues!"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"breaking-changes-for-toml-plugins",children:"Breaking changes for TOML plugins"}),"\n",(0,r.jsx)(n.p,{children:"In preparation for the next release, and as clean up during the rewrite, we've made a few breaking\nchanges to the TOML schema, primarily around global handling. To start, this old code:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'[install]\nglobals-dir = ["$PROTOSTAR_HOME/bin", "$HOME/.protostar/bin"]\nglobal-args = ["install", "--force", "{dependency}"]\n'})}),"\n",(0,r.jsx)(n.p,{children:"Can now be rewritten as:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'[globals]\nlookup-dirs = ["$PROTOSTAR_HOME/bin", "$HOME/.protostar/bin"]\ninstall-args = ["install", "--force", "{dependency}"]\n'})}),"\n",(0,r.jsxs)(n.p,{children:["And lastly, the ",(0,r.jsx)(n.code,{children:"install.unpack"})," setting has been removed. We believe our installation layer is\nsmart enough to unpack or move files automatically."]}),"\n",(0,r.jsx)(n.h2,{id:"other-changes",children:"Other changes"}),"\n",(0,r.jsxs)(n.p,{children:["View the ",(0,r.jsx)(n.a,{href:"https://github.com/moonrepo/proto/releases/tag/v0.14.0",children:"official release"})," for a full list\nof changes."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Versions defined in ",(0,r.jsx)(n.code,{children:".prototools"})," must be fully-qualified semantic versions. Partial versions\n(missing patch or minor) are no longer supported. This may change in the future based on feedback."]}),"\n",(0,r.jsx)(n.li,{children:"Tool and plugin names must now be in kebab-case."}),"\n",(0,r.jsxs)(n.li,{children:["Node","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Yarn 2+ is now installed using ",(0,r.jsx)(n.code,{children:"@yarnpkg/cli-dist"}),". We no longer downgrade to the latest v1."]}),"\n",(0,r.jsxs)(n.li,{children:["Will no longer detect a version from ",(0,r.jsx)(n.code,{children:"engines"})," in ",(0,r.jsx)(n.code,{children:"package.json"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Rust","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Will now detect a version/channel from ",(0,r.jsx)(n.code,{children:"rust-toolchain.toml"})," and ",(0,r.jsx)(n.code,{children:"rust-toolchain"}),"."]}),"\n"]}),"\n"]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},43023:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>l});var t=o(63696);const r={},i=t.createContext(r);function s(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(i.Provider,{value:n},e.children)}},79097:e=>{e.exports=JSON.parse('{"permalink":"/blog/proto-v0.14","editUrl":"https://github.com/moonrepo/moon/tree/master/website/blog/2023-08-11_proto-v0.14.mdx","source":"@site/blog/2023-08-11_proto-v0.14.mdx","title":"proto v0.14 - Node.js and Rust now powered by WASM plugins","description":"With this release, we\'ve finished our migration to a WASM based plugin architecture.","date":"2023-08-11T00:00:00.000Z","tags":[{"inline":true,"label":"proto","permalink":"/blog/tags/proto"},{"inline":true,"label":"wasm","permalink":"/blog/tags/wasm"},{"inline":true,"label":"plugin","permalink":"/blog/tags/plugin"}],"readingTime":2.19,"hasTruncateMarker":true,"authors":[{"name":"Miles Johnson","title":"Founder, developer","url":"https://github.com/milesj","imageURL":"/img/authors/miles.jpg","key":"milesj","page":null}],"frontMatter":{"slug":"proto-v0.14","title":"proto v0.14 - Node.js and Rust now powered by WASM plugins","authors":["milesj"],"tags":["proto","wasm","plugin"]},"unlisted":false,"prevItem":{"title":"moon v1.12 - Task improvements: extending, interactive, and more","permalink":"/blog/moon-v1.12"},"nextItem":{"title":"moon v1.11 - Next-generation project graph","permalink":"/blog/moon-v1.11"}}')}}]);