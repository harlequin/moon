"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[32382],{43023:(e,o,n)=>{n.d(o,{R:()=>l,x:()=>a});var t=n(63696);const i={},r=t.createContext(i);function l(e){const o=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(r.Provider,{value:o},e.children)}},61959:(e,o,n)=>{n.d(o,{A:()=>t});const t=n.p+"assets/images/v0.19-8de1899b49d54ec36a7294e44f3880ca.png"},81557:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>t,toc:()=>d});var t=n(93050),i=n(62540),r=n(43023);const l={slug:"proto-v0.19",title:"proto v0.19 - Version pinning and outdated checks",authors:["milesj"],tags:["proto","pin","global","local","outdated"],image:"./img/proto/v0.19.png"},a=void 0,s={image:n(61959).A,authorsImageUrls:[void 0]},d=[{value:"New <code>proto pin</code> command (breaking)",id:"new-proto-pin-command-breaking",level:2},{value:"New <code>pin-latest</code> setting",id:"new-pin-latest-setting",level:2},{value:"New <code>proto outdated</code> command",id:"new-proto-outdated-command",level:2},{value:"Other changes",id:"other-changes",level:2}];function c(e){const o={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(o.p,{children:"In this release, we're improving version pinning and introducing a new command to check for outdated\nversions."}),"\n",(0,i.jsxs)(o.h2,{id:"new-proto-pin-command-breaking",children:["New ",(0,i.jsx)(o.code,{children:"proto pin"})," command (breaking)"]}),"\n",(0,i.jsxs)(o.p,{children:["Before our official v1 release, which is relatively soon, we'll be making some breaking changes with\nthe proto APIs. The first is the introduction of the new ",(0,i.jsx)(o.a,{href:"/docs/proto/commands/pin",children:(0,i.jsx)(o.code,{children:"proto pin"})}),"\ncommand, which replaces the previous ",(0,i.jsx)(o.code,{children:"proto local"})," and ",(0,i.jsx)(o.code,{children:"proto global"})," commands. We felt this was a\nmuch cleaner change, and far easier to understand than the previous command names."]}),"\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-shell",children:"# v0.18\n$ proto local go 1.20\n$ proto global node 20\n\n# v0.19+\n$ proto pin go 1.20\n$ proto pin node 20 --global\n"})}),"\n",(0,i.jsxs)(o.h2,{id:"new-pin-latest-setting",children:["New ",(0,i.jsx)(o.code,{children:"pin-latest"})," setting"]}),"\n",(0,i.jsxs)(o.p,{children:["While we're on the subject of pinning versions, we've also introduced a new\n",(0,i.jsx)(o.a,{href:"/docs/proto/config#pin-latest",children:(0,i.jsx)(o.code,{children:"pin-latest"})})," setting. Do you want the latest version to always be\npinned? Do you forgot to pass ",(0,i.jsx)(o.code,{children:"--pin"})," when installing? Do you forget to run the ",(0,i.jsx)(o.code,{children:"proto global"})," or\n",(0,i.jsx)(o.code,{children:"proto local"})," commands (now ",(0,i.jsx)(o.code,{children:"proto pin"}),")? If you answered yes to any of these questions, then this\nsetting is for you."]}),"\n",(0,i.jsx)(o.p,{children:'When enabled, and a tool is installed with the "latest" version, the resolved version will\nautomatically be pinned to the configuration of your choice. For example, say we have the following\nuser config:'}),"\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-toml",metastring:'title="~/.proto/config.toml"',children:'pin-latest = "local"\n'})}),"\n",(0,i.jsx)(o.p,{children:"And we run one of the following commands:"}),"\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-shell",children:"$ proto install go\n$ proto install node latest\n"})}),"\n",(0,i.jsxs)(o.p,{children:["Then the resolved version of the tool will automatically be set to the ",(0,i.jsx)(o.code,{children:".prototools"})," file in the\ncurrent directory. Handy right?"]}),"\n",(0,i.jsxs)(o.h2,{id:"new-proto-outdated-command",children:["New ",(0,i.jsx)(o.code,{children:"proto outdated"})," command"]}),"\n",(0,i.jsxs)(o.p,{children:["By request of the community, we're introducing yet another new command,\n",(0,i.jsx)(o.a,{href:"/docs/proto/commands/outdated",children:(0,i.jsx)(o.code,{children:"proto outdated"})}),". If you're familiar with package managers, you can\nprobably guess what this command does! It'll check for newer available versions, for all tools\nconfigured in the closest ",(0,i.jsx)(o.code,{children:".prototools"})," file. Very handy for keeping your tools up to date."]}),"\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{children:"$ proto outdated\n\ngo - current version 1.20.2 (via ~1.20), newer version 1.20.8, update available!\nnode - current version 20.7.0 (via 20.7.0), latest version 20.8.0, update available!\n"})}),"\n",(0,i.jsx)(o.h2,{id:"other-changes",children:"Other changes"}),"\n",(0,i.jsxs)(o.p,{children:["View the ",(0,i.jsx)(o.a,{href:"https://github.com/moonrepo/proto/releases/tag/v0.19.0",children:"official release"})," for a full list\nof changes."]}),"\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsxs)(o.li,{children:["Added ",(0,i.jsx)(o.code,{children:"PROTO_WASM_LOG"})," environment variable to toggle the logging of messages from Extism and WASM\nplugins. Useful for debugging."]}),"\n",(0,i.jsxs)(o.li,{children:["Updated ",(0,i.jsx)(o.code,{children:"proto install"})," to auto-clean stale plugins after a successful installation."]}),"\n"]})]})}function p(e={}){const{wrapper:o}={...(0,r.R)(),...e.components};return o?(0,i.jsx)(o,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},93050:e=>{e.exports=JSON.parse('{"permalink":"/blog/proto-v0.19","editUrl":"https://github.com/moonrepo/moon/tree/master/website/blog/2023-09-29_proto-v0.19.mdx","source":"@site/blog/2023-09-29_proto-v0.19.mdx","title":"proto v0.19 - Version pinning and outdated checks","description":"In this release, we\'re improving version pinning and introducing a new command to check for outdated","date":"2023-09-29T00:00:00.000Z","tags":[{"inline":true,"label":"proto","permalink":"/blog/tags/proto"},{"inline":true,"label":"pin","permalink":"/blog/tags/pin"},{"inline":true,"label":"global","permalink":"/blog/tags/global"},{"inline":true,"label":"local","permalink":"/blog/tags/local"},{"inline":true,"label":"outdated","permalink":"/blog/tags/outdated"}],"readingTime":1.94,"hasTruncateMarker":true,"authors":[{"name":"Miles Johnson","title":"Founder, developer","url":"https://github.com/milesj","imageURL":"/img/authors/miles.jpg","key":"milesj","page":null}],"frontMatter":{"slug":"proto-v0.19","title":"proto v0.19 - Version pinning and outdated checks","authors":["milesj"],"tags":["proto","pin","global","local","outdated"],"image":"./img/proto/v0.19.png"},"unlisted":false,"prevItem":{"title":"moon v1.15 - Next-generation action graph","permalink":"/blog/moon-v1.15"},"nextItem":{"title":"moon v1.14 - Improvements to running targets and toolchain versions","permalink":"/blog/moon-v1.14"}}')}}]);