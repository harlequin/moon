"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[31092],{7621:e=>{e.exports=JSON.parse('{"permalink":"/blog/proto-v0.31","editUrl":"https://github.com/moonrepo/moon/tree/master/website/blog/2024-03-01_proto-v0.31.mdx","source":"@site/blog/2024-03-01_proto-v0.31.mdx","title":"proto v0.31 - Improved version pinning, removed global packages management, and more","description":"In preparation for an official v1 release, we\'ve improved stability, the overall developer","date":"2024-03-01T00:00:00.000Z","tags":[{"inline":true,"label":"proto","permalink":"/blog/tags/proto"},{"inline":true,"label":"version","permalink":"/blog/tags/version"},{"inline":true,"label":"pin","permalink":"/blog/tags/pin"},{"inline":true,"label":"global","permalink":"/blog/tags/global"},{"inline":true,"label":"packages","permalink":"/blog/tags/packages"}],"readingTime":2.99,"hasTruncateMarker":true,"authors":[{"name":"Miles Johnson","title":"Founder, developer","url":"https://github.com/milesj","imageURL":"/img/authors/miles.jpg","key":"milesj","page":null}],"frontMatter":{"slug":"proto-v0.31","title":"proto v0.31 - Improved version pinning, removed global packages management, and more","authors":["milesj"],"tags":["proto","version","pin","global","packages"]},"unlisted":false,"prevItem":{"title":"moon v1.23 - Codegen improvements, stack inheritance, internal tasks, and more","permalink":"/blog/moon-v1.23"},"nextItem":{"title":"moon v1.22 - Organizational settings, wildcard env var inputs, and Nx migration","permalink":"/blog/moon-v1.22"}}')},43023:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>t});var l=o(63696);const i={},s=l.createContext(i);function a(e){const n=l.useContext(s);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),l.createElement(s.Provider,{value:n},e.children)}},88264:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>r,contentTitle:()=>t,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var l=o(7621),i=o(62540),s=o(43023);const a={slug:"proto-v0.31",title:"proto v0.31 - Improved version pinning, removed global packages management, and more",authors:["milesj"],tags:["proto","version","pin","global","packages"]},t=void 0,r={authorsImageUrls:[void 0]},d=[{value:"Improved version pinning",id:"improved-version-pinning",level:2},{value:"Removed global package management (breaking)",id:"removed-global-package-management-breaking",level:2},{value:"New npm/pnpm/yarn <code>shared-globals-dir</code> setting",id:"new-npmpnpmyarn-shared-globals-dir-setting",level:2},{value:"Renamed commands (breaking)",id:"renamed-commands-breaking",level:2},{value:"Other changes",id:"other-changes",level:2}];function c(e){const n={a:"a",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"In preparation for an official v1 release, we've improved stability, the overall developer\nexperience, we're renaming some commands, and removing the \"global packages\" functionality."}),"\n",(0,i.jsx)(n.h2,{id:"improved-version-pinning",children:"Improved version pinning"}),"\n",(0,i.jsxs)(n.p,{children:["Based on feedback from the community, we've made some slight changes to pinning to reduce confusion.\nThe biggest points of contention were, \"Why does ",(0,i.jsx)(n.code,{children:"proto install --pin"}),' pin globally?", and "Why\ndoesn\'t ',(0,i.jsx)(n.code,{children:"proto pin"})," resolve the version like ",(0,i.jsx)(n.code,{children:"proto install --pin"}),' does?".']}),"\n",(0,i.jsxs)(n.p,{children:["To remedy the first issue, we've updated the ",(0,i.jsx)(n.code,{children:"--pin"}),' argument to optionally support a string value\nof "local" or "global". When local, will pin to the ',(0,i.jsx)(n.code,{children:".prototools"})," file in the current directory,\notherwise it will pin to ",(0,i.jsx)(n.code,{children:"~/.proto/.prototools"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"$ proto install node --pin # global\n$ proto install node --pin global\n$ proto install node --pin local\n"})}),"\n",(0,i.jsxs)(n.p,{children:["As for the second issue, we've introduced a new option called ",(0,i.jsx)(n.code,{children:"--resolve"}),', which will resolve the\nversion to a fully qualified semantic version (or fail). This isn\'t the default functionality, as to\nnot break existing workflows, and because you may want to actually pin "1" instead of "1.2.3".']}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"$ proto pin node 1 # 1\n$ proto pin node 1 --resolve # 1.2.3\n"})}),"\n",(0,i.jsx)(n.h2,{id:"removed-global-package-management-breaking",children:"Removed global package management (breaking)"}),"\n",(0,i.jsxs)(n.p,{children:["A while back we introduced the ",(0,i.jsx)(n.code,{children:"proto install-global"})," and ",(0,i.jsx)(n.code,{children:"proto uninstall-global"})," commands as a\nmeans for managing global packages. This was added to solve issues with the Node.js ecosystem,\nprimarily around standardizing where global packages would be installed across all package managers.\nOn top of this, we also introduced a \"command interception\" feature, which would error telling you\nto use proto's command instead of the package manager's."]}),"\n",(0,i.jsxs)(n.p,{children:["As a whole, this feature was ",(0,i.jsx)(n.em,{children:"very"})," disruptive to users, caused a lot of confusion, was simply\npoorly implemented, and honestly wasn't really necessary for tools outside of Node.js. Because of\nall of this, we've decided to entirely remove our global package management functionality, this\nincludes:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"proto install-global"})," command"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"proto uninstall-global"})," command"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"proto list-global"})," command"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"intercept-globals"})," setting for node/npm/pnpm/yarn"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"globals"})," setting for TOML plugins"]}),"\n"]}),"\n",(0,i.jsxs)(n.h2,{id:"new-npmpnpmyarn-shared-globals-dir-setting",children:["New npm/pnpm/yarn ",(0,i.jsx)(n.code,{children:"shared-globals-dir"})," setting"]}),"\n",(0,i.jsxs)(n.p,{children:["Since we removed our global packages support (above), we had to also remove the ",(0,i.jsx)(n.code,{children:"intercept-globals"}),"\nsetting from our Node.js related WASM plugins. However, we still believed in the benefit it\nprovided, primarily around standardizing where global packages would be installed across all package\nmanagers."]}),"\n",(0,i.jsxs)(n.p,{children:["To still support this in some capacity, we've introduced a new ",(0,i.jsx)(n.code,{children:"shared-globals-dir"})," setting for npm,\npnpm, and yarn. This setting still standardizes the install path, ",(0,i.jsx)(n.em,{children:"but instead"})," of intercepting\ncommands like it did before, it now appends the global package install commands with additional\narguments or environment variables. This should be entirely transparent to you!"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-toml",metastring:'title=".prototools"',children:"[tools.npm]\nshared-globals-dir = true\n"})}),"\n",(0,i.jsx)(n.p,{children:"An example of how this now works:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"# < v0.31\nproto install-global npm typescript\n\n# >= v0.31\nnpm install --global typescript\n\n# Under the hood becomes...\nPREFIX=/.proto/tools/node/globals npm install --global typescript\n"})}),"\n",(0,i.jsx)(n.h2,{id:"renamed-commands-breaking",children:"Renamed commands (breaking)"}),"\n",(0,i.jsx)(n.p,{children:"We're still not happy with some of the current command names, especially around tools and plugins,\nso we've renamed a few of them. They are:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Renamed the ",(0,i.jsx)(n.code,{children:"proto tool"})," commands to ",(0,i.jsx)(n.code,{children:"proto plugin"}),". An alias still exists for the time being."]}),"\n",(0,i.jsxs)(n.li,{children:["Removed the ",(0,i.jsx)(n.code,{children:"proto tool list-plugins"})," command, and merged its functionality into\n",(0,i.jsx)(n.code,{children:"proto plugin list"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["As for the ",(0,i.jsx)(n.code,{children:"proto plugin list"})," command, we've removed the versions and aliases from the output by\ndefault, and wrapped them in new ",(0,i.jsx)(n.code,{children:"--versions"})," and ",(0,i.jsx)(n.code,{children:"--aliases"})," options."]}),"\n",(0,i.jsx)(n.h2,{id:"other-changes",children:"Other changes"}),"\n",(0,i.jsxs)(n.p,{children:["View the ",(0,i.jsx)(n.a,{href:"https://github.com/moonrepo/proto/releases/tag/v0.31.0",children:"official release"})," for a full list\nof changes."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Fixed an issue where empty version strings were being parsed, causing failures."}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);