"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[93250],{3674:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>u});const s=JSON.parse('{"id":"guides/examples/eslint","title":"ESLint example","description":"In this guide, you\'ll learn how to integrate ESLint into moon.","source":"@site/docs/guides/examples/eslint.mdx","sourceDirName":"guides/examples","slug":"/guides/examples/eslint","permalink":"/docs/guides/examples/eslint","draft":false,"unlisted":false,"editUrl":"https://github.com/moonrepo/moon/tree/master/website/docs/guides/examples/eslint.mdx","tags":[],"version":"current","frontMatter":{"title":"ESLint example","sidebar_label":"ESLint"},"sidebar":"guides","previous":{"title":"Astro","permalink":"/docs/guides/examples/astro"},"next":{"title":"Jest","permalink":"/docs/guides/examples/jest"}}');var r=t(62540),i=t(43023),o=t(4833),l=t(25648);const a={title:"ESLint example",sidebar_label:"ESLint"},c=void 0,d={},u=[{value:"Setup",id:"setup",level:2},{value:"TypeScript integration",id:"typescript-integration",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Root-level",id:"root-level",level:3},{value:"Project-level",id:"project-level",level:3},{value:"Sharing",id:"sharing",level:3},{value:"FAQ",id:"faq",level:2},{value:"How to lint a single file or folder?",id:"how-to-lint-a-single-file-or-folder",level:3},{value:"Should we use <code>overrides</code>?",id:"should-we-use-overrides",level:3}];function p(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(l.A,{to:"https://github.com/moonrepo/examples/blob/master/.moon/tasks/node.yml#L59"}),"\n",(0,r.jsxs)(n.p,{children:["In this guide, you'll learn how to integrate ",(0,r.jsx)(n.a,{href:"https://eslint.org/",children:"ESLint"})," into moon."]}),"\n",(0,r.jsxs)(n.p,{children:["Begin by installing ",(0,r.jsx)(n.code,{children:"eslint"})," and any plugins in your root. We suggest using the same version across\nthe entire repository."]}),"\n",(0,r.jsx)(o.A,{dep:"eslint eslint-config-moon",dev:!0}),"\n",(0,r.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,r.jsxs)(n.p,{children:["Since linting is a universal workflow, add a ",(0,r.jsx)(n.code,{children:"lint"})," task to\n",(0,r.jsx)(n.a,{href:"../../config/tasks",children:(0,r.jsx)(n.code,{children:".moon/tasks/node.yml"})})," with the following parameters."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'title=".moon/tasks/node.yml"',children:"tasks:\n  lint:\n    command:\n      - 'eslint'\n      # Support other extensions\n      - '--ext'\n      - '.js,.jsx,.ts,.tsx'\n      # Always fix and run extra checks\n      - '--fix'\n      - '--report-unused-disable-directives'\n      # Dont fail if a project has nothing to lint\n      - '--no-error-on-unmatched-pattern'\n      # Do fail if we encounter a fatal error\n      - '--exit-on-fatal-error'\n      # Only 1 ignore file is supported, so use the root\n      - '--ignore-path'\n      - '@in(4)'\n      # Run in current dir\n      - '.'\n    inputs:\n      # Source and test files\n      - 'src/**/*'\n      - 'tests/**/*'\n      # Other config files\n      - '*.config.*'\n      # Project configs, any format, any depth\n      - '**/.eslintrc.*'\n      # Root configs, any format\n      - '/.eslintignore'\n      - '/.eslintrc.*'\n"})}),"\n",(0,r.jsx)(n.p,{children:"Projects can extend this task and provide additional parameters if need be, for example."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'title="<project>/moon.yml"',children:"tasks:\n  lint:\n    args:\n      # Enable caching for this project\n      - '--cache'\n"})}),"\n",(0,r.jsx)(n.h3,{id:"typescript-integration",children:"TypeScript integration"}),"\n",(0,r.jsxs)(n.p,{children:["If you're using the ",(0,r.jsx)(n.a,{href:"https://typescript-eslint.io",children:(0,r.jsx)(n.code,{children:"@typescript-eslint"})})," packages, and want to\nenable type-safety based lint rules, we suggest something similar to the official\n",(0,r.jsx)(n.a,{href:"https://typescript-eslint.io/docs/linting/monorepo",children:"monorepo configuration"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Create a ",(0,r.jsx)(n.code,{children:"tsconfig.eslint.json"})," in your repository root, extend your shared compiler options (we use\n",(0,r.jsx)(n.a,{href:"./typescript",children:(0,r.jsx)(n.code,{children:"tsconfig.options.json"})}),"), and include all your project files."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:'title="tsconfig.eslint.json"',children:'{\n  "extends": "./tsconfig.options.json",\n  "compilerOptions": {\n    "emitDeclarationOnly": false,\n    "noEmit": true\n  },\n  "include": ["apps/**/*", "packages/**/*"]\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Append the following inputs to your ",(0,r.jsx)(n.code,{children:"lint"})," task."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'title=".moon/tasks/node.yml"',children:"tasks:\n  lint:\n    # ...\n    inputs:\n      # TypeScript support\n      - 'types/**/*'\n      - 'tsconfig.json'\n      - '/tsconfig.eslint.json'\n      - '/tsconfig.options.json'\n"})}),"\n",(0,r.jsxs)(n.p,{children:["And lastly, add ",(0,r.jsx)(n.code,{children:"parserOptions"})," to your ",(0,r.jsx)(n.a,{href:"#root-level",children:"root-level config"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsx)(n.h3,{id:"root-level",children:"Root-level"}),"\n",(0,r.jsxs)(n.p,{children:["The root-level ESLint config is ",(0,r.jsx)(n.em,{children:"required"}),", as ESLint traverses upwards from each file to find\nconfigurations, and this denotes the stopping point. It's also used to define rules for the ",(0,r.jsx)(n.em,{children:"entire"}),"\nrepository."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'title=".eslintrc.js"',children:"module.exports = {\n  root: true, // Required!\n  extends: ['moon'],\n  rules: {\n    'no-console': 'error',\n  },\n\n  // TypeScript support\n  parser: '@typescript-eslint/parser',\n  parserOptions: {\n    project: 'tsconfig.eslint.json',\n    tsconfigRootDir: __dirname,\n  },\n};\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:".eslintignore"})," file must also be defined at the root, as\n",(0,r.jsx)(n.a,{href:"https://eslint.org/docs/user-guide/configuring/ignoring-code#the-eslintignore-file",children:"only 1 ignore file"}),"\ncan exist in a repository. We ensure this ignore file is used by passing ",(0,r.jsx)(n.code,{children:"--ignore-path"})," above."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'title=".eslintignore"',children:"node_modules/\n*.min.js\n*.map\n*.snap\n"})}),"\n",(0,r.jsx)(n.h3,{id:"project-level",children:"Project-level"}),"\n",(0,r.jsxs)(n.p,{children:["A project-level ESLint config can be utilized by creating a ",(0,r.jsx)(n.code,{children:".eslintrc.<json|js|cjs|yml>"})," in the\nproject root. This is optional, but necessary when defining rules and ignore patterns unique to the\nproject."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'title="<project>/.eslintrc.js"',children:"module.exports = {\n  // Patterns to ignore (alongside the root .eslintignore)\n  ignorePatterns: ['build', 'lib'],\n  // Project specific rules\n  rules: {\n    'no-console': 'off',\n  },\n};\n"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["The\n",(0,r.jsx)(n.a,{href:"https://eslint.org/docs/user-guide/configuring/configuration-files#extending-configuration-files",children:(0,r.jsx)(n.code,{children:"extends"})}),"\nsetting should ",(0,r.jsx)(n.strong,{children:"not"})," extend the root-level config, as ESLint will automatically merge configs\nwhile traversing upwards!"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"sharing",children:"Sharing"}),"\n",(0,r.jsx)(n.p,{children:"To share configuration across projects, you have 3 options:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Define settings in the ",(0,r.jsx)(n.a,{href:"#root-level",children:"root-level config"}),". This only applies to the parent\nrepository."]}),"\n",(0,r.jsxs)(n.li,{children:["Create and publish an\n",(0,r.jsx)(n.a,{href:"https://eslint.org/docs/developer-guide/shareable-configs#using-a-shareable-config",children:(0,r.jsx)(n.code,{children:"eslint-config"})}),"\nor ",(0,r.jsx)(n.a,{href:"https://eslint.org/docs/developer-guide/working-with-plugins",children:(0,r.jsx)(n.code,{children:"eslint-plugin"})})," npm package.\nThis can be used in any repository."]}),"\n",(0,r.jsx)(n.li,{children:"A combination of 1 and 2."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"For options 2 and 3, if you're utilizing package workspaces, create a local package with the\nfollowing content."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'title="packages/eslint-config-company/index.js"',children:"module.exports = {\n  extends: ['airbnb'],\n};\n"})}),"\n",(0,r.jsx)(n.p,{children:"Within your root-level ESLint config, you can extend this package to inherit the settings."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'title=".eslintrc.js"',children:"module.exports = {\n  extends: 'eslint-config-company',\n};\n"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["When using this approach, the package must be built and symlinked into ",(0,r.jsx)(n.code,{children:"node_modules"})," ",(0,r.jsx)(n.em,{children:"before"})," the\nlinter will run correctly. Take this into account when going down this path!"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"faq",children:"FAQ"}),"\n",(0,r.jsx)(n.h3,{id:"how-to-lint-a-single-file-or-folder",children:"How to lint a single file or folder?"}),"\n",(0,r.jsxs)(n.p,{children:["Unfortunately, this isn't currently possible, as the ",(0,r.jsx)(n.code,{children:"eslint"})," binary itself requires a file or\nfolder path to operate on, and in the task above we pass ",(0,r.jsx)(n.code,{children:"."})," (current directory). If this was not\npassed, then nothing would be linted."]}),"\n",(0,r.jsx)(n.p,{children:"This has the unintended side-effect of not being able to filter down lintable targets by passing\narbitrary file paths. This is something we hope to resolve in the future."}),"\n",(0,r.jsx)(n.p,{children:"To work around this limitation, you can create another lint task."}),"\n",(0,r.jsxs)(n.h3,{id:"should-we-use-overrides",children:["Should we use ",(0,r.jsx)(n.code,{children:"overrides"}),"?"]}),"\n",(0,r.jsxs)(n.p,{children:["Projects should define their own rules using an ESLint config in their project root. However, if you\nwant to avoid touching many ESLint configs (think migrations), then\n",(0,r.jsx)(n.a,{href:"https://eslint.org/docs/user-guide/configuring/configuration-files#configuration-based-on-glob-patterns",children:"overrides in the root"}),"\nare a viable option. Otherwise, we highly encourage project-level configs."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'title=".eslintrc.js"',children:"module.exports = {\n  // ...\n  overrides: [\n    // Only apply to apps \"foo\" and \"bar\", but not others\n    {\n      files: ['apps/foo/**/*', 'apps/bar/**/*'],\n      rules: {\n        'no-magic-numbers': 'off',\n      },\n    },\n  ],\n};\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},4833:(e,n,t)=>{t.d(n,{A:()=>u});var s=t(35562),r=t(22491),i=t(78296),o=t(62540);function l(e,n,t){let s=e.package?`yarn workspace ${e.package} add `:"yarn add ";return e.dev?s+="--dev ":e.peer&&(s+="--peer "),t&&n&&!e.package&&(s+="-W "),s+=e.dep,s}function a(e){let n="npm install ";return e.dev?n+="--save-dev ":e.peer&&(n+="--save-peer "),e.package&&(n+=`--workspace ${e.package} `),n+=e.dep,n}function c(e,n){let t="pnpm add ";return e.dev?t+="--save-dev ":e.peer&&(t+="--save-peer "),e.package?t+=`--filter ${e.package} `:n&&(t+="-w "),t+=e.dep,t}function d(e){let n="bun install ";return e.dev?n+="--dev ":e.peer&&(n+="--peer "),n+=e.dep,n}function u(e){let n=l(e,!1,!0),t=c(e,!1);return e.package||(n+="\n\n# If using workspaces\n",t+="\n\n# If using workspaces\n",n+=l(e,!0,!0),t+=c(e,!0)),(0,o.jsxs)(i.A,{groupId:"package-manager",defaultValue:"yarn",values:[{label:"Yarn",value:"yarn"},{label:"Yarn (classic)",value:"yarn1"},{label:"npm",value:"npm"},{label:"pnpm",value:"pnpm"},{label:"Bun",value:"bun"}],children:[(0,o.jsx)(r.A,{value:"yarn",children:(0,o.jsx)(s.default,{language:"shell",children:l(e,!1,!1)})}),(0,o.jsx)(r.A,{value:"yarn1",children:(0,o.jsx)(s.default,{language:"shell",children:n})}),(0,o.jsx)(r.A,{value:"npm",children:(0,o.jsx)(s.default,{language:"shell",children:a(e)})}),(0,o.jsx)(r.A,{value:"pnpm",children:(0,o.jsx)(s.default,{language:"shell",children:t})}),(0,o.jsx)(r.A,{value:"bun",children:(0,o.jsx)(s.default,{language:"shell",children:d(e)})})]})}},22491:(e,n,t)=>{t.d(n,{A:()=>o});t(63696);var s=t(11750);const r={tabItem:"tabItem_wHwb"};var i=t(62540);function o(e){let{children:n,hidden:t,className:o}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,s.A)(r.tabItem,o),hidden:t,children:n})}},25648:(e,n,t)=>{function s(e){let{to:n}=e;return null}t.d(n,{A:()=>s})},43023:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var s=t(63696);const r={},i=s.createContext(r);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:n},e.children)}},78296:(e,n,t)=>{t.d(n,{A:()=>w});var s=t(63696),r=t(11750),i=t(90766),o=t(49519),l=t(14395),a=t(35043),c=t(44544),d=t(94243);function u(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:t}=e;return(0,s.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:s,default:r}}=e;return{value:n,label:t,attributes:s,default:r}}))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function h(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function g(e){let{queryString:n=!1,groupId:t}=e;const r=(0,o.W6)(),i=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,a.aZ)(i),(0,s.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(r.location.search);n.set(i,e),r.replace({...r.location,search:n.toString()})}),[i,r])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,i=p(e),[o,a]=(0,s.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const s=t.find((e=>e.default))??t[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:i}))),[c,u]=g({queryString:t,groupId:r}),[f,m]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,i]=(0,d.Dv)(t);return[r,(0,s.useCallback)((e=>{t&&i.set(e)}),[t,i])]}({groupId:r}),x=(()=>{const e=c??f;return h({value:e,tabValues:i})?e:null})();(0,l.A)((()=>{x&&a(x)}),[x]);return{selectedValue:o,selectValue:(0,s.useCallback)((e=>{if(!h({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);a(e),u(e),m(e)}),[u,m,i]),tabValues:i}}var m=t(86681);const x={tabList:"tabList_J5MA",tabItem:"tabItem_l0OV"};var j=t(62540);function v(e){let{className:n,block:t,selectedValue:s,selectValue:o,tabValues:l}=e;const a=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.a_)(),d=e=>{const n=e.currentTarget,t=a.indexOf(n),r=l[t].value;r!==s&&(c(n),o(r))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=a.indexOf(e.currentTarget)+1;n=a[t]??a[0];break}case"ArrowLeft":{const t=a.indexOf(e.currentTarget)-1;n=a[t]??a[a.length-1];break}}n?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},n),children:l.map((e=>{let{value:n,label:t,attributes:i}=e;return(0,j.jsx)("li",{role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:e=>{a.push(e)},onKeyDown:u,onClick:d,...i,className:(0,r.A)("tabs__item",x.tabItem,i?.className,{"tabs__item--active":s===n}),children:t??n},n)}))})}function b(e){let{lazy:n,children:t,selectedValue:i}=e;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===i));return e?(0,s.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:o.map(((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function y(e){const n=f(e);return(0,j.jsxs)("div",{className:(0,r.A)("tabs-container",x.tabList),children:[(0,j.jsx)(v,{...n,...e}),(0,j.jsx)(b,{...n,...e})]})}function w(e){const n=(0,m.A)();return(0,j.jsx)(y,{...e,children:u(e.children)},String(n))}}}]);