"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[66736],{43023:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var i=t(63696);const r={},s=i.createContext(r);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:n},e.children)}},68532:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"guides/javascript/typescript-eslint","title":"typescript-eslint","description":"ESLint integration","source":"@site/docs/guides/javascript/typescript-eslint.mdx","sourceDirName":"guides/javascript","slug":"/guides/javascript/typescript-eslint","permalink":"/docs/guides/javascript/typescript-eslint","draft":false,"unlisted":false,"editUrl":"https://github.com/moonrepo/moon/tree/master/website/docs/guides/javascript/typescript-eslint.mdx","tags":[],"version":"current","frontMatter":{}}');var r=t(62540),s=t(43023);const o={},a=void 0,l={},c=[{value:"ESLint integration",id:"eslint-integration",level:2},{value:"Disabling problematic rules",id:"disabling-problematic-rules",level:3},{value:"Running from the command line",id:"running-from-the-command-line",level:3},{value:"Running within editors",id:"running-within-editors",level:3},{value:"ESLint",id:"eslint",level:4},{value:"Prettier",id:"prettier",level:4}];function d(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"eslint-integration",children:"ESLint integration"}),"\n",(0,r.jsx)(n.h3,{id:"disabling-problematic-rules",children:"Disabling problematic rules"}),"\n",(0,r.jsxs)(n.p,{children:["A handful of ESLint rules are not compatible with the TypeScript plugin, or they cause serious\nperformance degradation, and should be disabled entirely. According to the\n",(0,r.jsx)(n.a,{href:"https://typescript-eslint.io/docs/linting/troubleshooting#eslint-plugin-import",children:"official typescript-eslint.io documentation"}),",\nmost of these rules come from the ",(0,r.jsx)(n.code,{children:"eslint-plugin-import"})," plugin."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'title=".eslintrc.js"',children:"module.exports = {\n  // ...\n  rules: {\n    'import/default': 'off',\n    'import/named': 'off',\n    'import/namespace': 'off',\n    'import/no-cycle': 'off',\n    'import/no-deprecated': 'off',\n    'import/no-named-as-default': 'off',\n    'import/no-named-as-default-member': 'off',\n    'import/no-unused-modules': 'off',\n  },\n};\n"})}),"\n",(0,r.jsx)(n.h3,{id:"running-from-the-command-line",children:"Running from the command line"}),"\n",(0,r.jsx)(n.h3,{id:"running-within-editors",children:"Running within editors"}),"\n",(0,r.jsx)(n.h4,{id:"eslint",children:"ESLint"}),"\n",(0,r.jsxs)(n.p,{children:["Use the\n",(0,r.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint",children:"dbaeumer.vscode-eslint"}),"\nextension. Too avoid poor performance, ",(0,r.jsx)(n.em,{children:"do not"})," use ESLint for formatting code (via the\n",(0,r.jsx)(n.code,{children:"eslint-plugin-prettier"})," plugin or something similar), and ",(0,r.jsx)(n.em,{children:"only"})," use it for linting. The difference\nin speed is comparable to 100ms vs 2000ms."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:'title=".vscode/settings.json"',children:'{\n  // Automatically run all linting fixes on save as a concurrent code action,\n  // and avoid formatting with ESLint. Use another formatter, like Prettier.\n  "editor.codeActionsOnSave": ["source.fixAll.eslint"],\n  "eslint.format.enable": false,\n\n  // If linting is *too slow* while typing, uncomment the following line to\n  // only run the linter on save only.\n  // "editor.run": "onSave",\n\n  // Your package manager of choice.\n  "eslint.packageManager": "yarn",\n\n  // Use the newer and more performant `ESLint` class implementation.\n  "eslint.useESLintClass": true,\n\n  // List of directories that that linter should operate on.\n  "eslint.workingDirectories": [{ "pattern": "apps/*" }, { "pattern": "packages/*" }]\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"prettier",children:"Prettier"}),"\n",(0,r.jsxs)(n.p,{children:["Use the\n",(0,r.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode",children:"esbenp.prettier-vscode"}),"\nextension."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:'title=".vscode/settings.json"',children:'{\n  // Use Prettier as the default formatter for all file types. Types not\n  // supported by Prettier can be overridden using bracket syntax, or ignore files.\n  "editor.defaultFormatter": "esbenp.prettier-vscode",\n  "editor.formatOnSave": true\n}\n'})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);