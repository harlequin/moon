"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[43219],{43023:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>a});var s=o(63696);const c={},r=s.createContext(c);function i(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:i(e.components),s.createElement(r.Provider,{value:n},e.children)}},67089:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>t,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"commands/docker/scaffold","title":"docker scaffold","description":"The moon docker scaffold  command creates multiple repository skeletons for use","source":"@site/docs/commands/docker/scaffold.mdx","sourceDirName":"commands/docker","slug":"/commands/docker/scaffold","permalink":"/docs/commands/docker/scaffold","draft":false,"unlisted":false,"editUrl":"https://github.com/moonrepo/moon/tree/master/website/docs/commands/docker/scaffold.mdx","tags":[],"version":"current","frontMatter":{"title":"docker scaffold","sidebar_label":"scaffold"},"sidebar":"docs","previous":{"title":"prune","permalink":"/docs/commands/docker/prune"},"next":{"title":"setup","permalink":"/docs/commands/docker/setup"}}');var c=o(62540),r=o(43023);const i={title:"docker scaffold",sidebar_label:"scaffold"},a=void 0,t={},l=[{value:"Arguments",id:"arguments",level:3},{value:"Configuration",id:"configuration",level:3},{value:"How it works",id:"how-it-works",level:2},{value:"Workspace",id:"workspace",level:3},{value:"Sources",id:"sources",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(n.p,{children:["The ",(0,c.jsx)(n.code,{children:"moon docker scaffold <...projects>"})," command creates multiple repository skeletons for use\nwithin ",(0,c.jsx)(n.code,{children:"Dockerfile"}),"s, to effectively take advantage of Docker's layer caching. It utilizes the\n",(0,c.jsx)(n.a,{href:"../../config/workspace#projects",children:"project graph"})," to copy only critical files, like manifests, lockfiles, and configuration."]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-shell",children:"# Scaffold a skeleton to .moon/docker\n$ moon docker scaffold <project>\n"})}),"\n",(0,c.jsx)(n.admonition,{type:"info",children:(0,c.jsxs)(n.p,{children:["View the official ",(0,c.jsx)(n.a,{href:"../../guides/docker",children:"Docker usage guide"})," for a more in-depth example of how to\nutilize this command."]})}),"\n",(0,c.jsx)(n.h3,{id:"arguments",children:"Arguments"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"<...projects>"})," - List of project names or aliases to scaffold sources for, as defined in\n",(0,c.jsx)(n.a,{href:"../../config/workspace#projects",children:(0,c.jsx)(n.code,{children:"projects"})}),"."]}),"\n"]}),"\n",(0,c.jsx)(n.h3,{id:"configuration",children:"Configuration"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.a,{href:"../../config/workspace#scaffold",children:(0,c.jsx)(n.code,{children:"docker.scaffold"})})," in ",(0,c.jsx)(n.code,{children:".moon/workspace.yml"})," (entire workspace)"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.a,{href:"../../config/project#scaffold",children:(0,c.jsx)(n.code,{children:"docker.scaffold"})})," in ",(0,c.jsx)(n.code,{children:"moon.yml"})," (per project)"]}),"\n"]}),"\n",(0,c.jsx)(n.h2,{id:"how-it-works",children:"How it works"}),"\n",(0,c.jsxs)(n.p,{children:["This command may seem like magic, but it's relative simple thanks to moon's infrastructure and its\nproject graph. When the command is ran, we generate 2 skeleton structures in ",(0,c.jsx)(n.code,{children:".moon/docker"})," (be sure\nto gitignore this). One for the workspace, and the other for sources."]}),"\n",(0,c.jsx)(n.admonition,{type:"warning",children:(0,c.jsxs)(n.p,{children:["Because scaffolding uses the project graph, it requires all projects with a ",(0,c.jsx)(n.code,{children:"package.json"})," to be\n",(0,c.jsx)(n.a,{href:"../../config/workspace#projects",children:"configured in moon"}),". Otherwise, moon will fail to copy all required files and builds may\nfail."]})}),"\n",(0,c.jsx)(n.h3,{id:"workspace",children:"Workspace"}),"\n",(0,c.jsxs)(n.p,{children:["The workspace skeleton mirrors the project folder structure of the repository 1:1, and only copies\nfiles required for dependencies to install. This is typically manifests (",(0,c.jsx)(n.code,{children:"package.json"}),"), lockfiles\n(",(0,c.jsx)(n.code,{children:"yarn.lock"}),", etc), other critical configs, and ",(0,c.jsx)(n.code,{children:".moon"})," itself. This is necessary for package\nmanagers to install dependencies (otherwise they will fail), and for dependencies to be layer cached\nin Docker."]}),"\n",(0,c.jsx)(n.p,{children:"An example of this skeleton using Yarn may look like the following:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:".moon/docker/workspace/\n\u251c\u2500\u2500 .moon/\n\u251c\u2500\u2500 .yarn/\n\u251c\u2500\u2500 apps/\n\u2502   \u251c\u2500\u2500 client/\n\u2502   \u2502   \u2514\u2500\u2500 package.json\n\u2502   \u2514\u2500\u2500 server/\n\u2502       \u2514\u2500\u2500 package.json\n\u251c\u2500\u2500 packages/\n\u2502   \u251c\u2500\u2500 foo/\n\u2502   \u2502   \u2514\u2500\u2500 package.json\n\u2502   \u251c\u2500\u2500 bar/\n\u2502   \u2502   \u2514\u2500\u2500 package.json\n\u2502   \u2514\u2500\u2500 baz/\n\u2502       \u2514\u2500\u2500 package.json\n\u251c\u2500\u2500 .yarnrc.yml\n\u251c\u2500\u2500 package.json\n\u2514\u2500\u2500 yarn.lock\n"})}),"\n",(0,c.jsx)(n.h3,{id:"sources",children:"Sources"}),"\n",(0,c.jsxs)(n.p,{children:["The sources skeleton is not a 1:1 mirror of the repository, and instead is the source files of a\nproject (passed as an argument to the command), and all of its dependencies. This allows\n",(0,c.jsx)(n.a,{href:"../run",children:(0,c.jsx)(n.code,{children:"moon run"})})," and other commands to work within the ",(0,c.jsx)(n.code,{children:"Dockerfile"}),", and avoid having to\n",(0,c.jsx)(n.code,{children:"COPY . ."})," the entire repository."]}),"\n",(0,c.jsxs)(n.p,{children:["Using our example workspace above, our sources skeleton would look like the following, assuming our\n",(0,c.jsx)(n.code,{children:"client"})," project is passed as an argument, and this project depends on the ",(0,c.jsx)(n.code,{children:"foo"})," and ",(0,c.jsx)(n.code,{children:"baz"})," projects."]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:".moon/docker/sources/\n\u251c\u2500\u2500 apps/\n\u2502   \u2514\u2500\u2500 client/\n|       \u251c\u2500\u2500 src/\n|       \u251c\u2500\u2500 tests/\n|       \u251c\u2500\u2500 public/\n|       \u251c\u2500\u2500 package.json\n|       \u251c\u2500\u2500 tsconfig.json\n\u2502       \u2514\u2500\u2500 (anything else)\n\u2514\u2500\u2500 packages/\n    \u251c\u2500\u2500 foo/\n    \u2502   \u251c\u2500\u2500 lib/\n    \u2502   \u251c\u2500\u2500 src/\n    \u2502   \u251c\u2500\u2500 package.json\n    \u2502   \u251c\u2500\u2500 tsconfig.json\n    \u2502   \u2514\u2500\u2500 (anything else)\n    \u2514\u2500\u2500 baz/\n        \u251c\u2500\u2500 lib/\n        \u251c\u2500\u2500 src/\n        \u251c\u2500\u2500 package.json\n        \u251c\u2500\u2500 tsconfig.json\n        \u2514\u2500\u2500 (anything else)\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(d,{...e})}):d(e)}}}]);