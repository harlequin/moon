"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[19471],{43023:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>a});var s=i(63696);const t={},o=s.createContext(t);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(o.Provider,{value:n},e.children)}},54306:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var s=i(62696),t=i(62540),o=i(43023),r=i(44338);const a={slug:"moon-v1.10",title:"moon v1.10 - Mid-year quality of life improvements",authors:["milesj"],tags:["quality","life","qol","ignore","hasher","vcs","ci","debug"],image:"./img/moon/v1.10.png"},l=void 0,d={image:i(57434).A,authorsImageUrls:[void 0]},c=[{value:"Quality improvements",id:"quality-improvements",level:2},{value:"Potential breaking changes",id:"potential-breaking-changes",level:3},{value:"Ignore hashing input files",id:"ignore-hashing-input-files",level:3},{value:"Customize base and head revision",id:"customize-base-and-head-revision",level:3},{value:"New debugging a task guide",id:"new-debugging-a-task-guide",level:2},{value:"Other changes",id:"other-changes",level:2}];function h(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Instead of launching a large feature this release, we're focusing on quality of life and developer\nexperience improvements."}),"\n",(0,t.jsx)(n.h2,{id:"quality-improvements",children:"Quality improvements"}),"\n",(0,t.jsx)(n.p,{children:"In the past 6 months, we've released over 16 versions of moon, with our official v1.0 release among\nthem. This is extremely impressive and we're very proud of the progress we've made. To continue this\ntrend, we'll be starting a new initiative that will land quality of life improvements (instead of\nmajor features) every 6 months, starting with this release!"}),"\n",(0,t.jsx)(n.h3,{id:"potential-breaking-changes",children:"Potential breaking changes"}),"\n",(0,t.jsx)(n.p,{children:"While APIs haven't changed, we have introduced some fixes for edge case that could be considered\nbreaking, but for the most part, these changes probably won't affect you. With that being said..."}),"\n",(0,t.jsxs)(n.p,{children:["The first fix is that tasks configured with the same ",(0,t.jsx)(n.code,{children:"outputs"})," location (including glob overlap)\nwill now error. This is extremely problematic for caching and hydration, as multiple tasks all\nwriting to the same output will inflate the tarball, and cause unwanted side effects. To demonstrate\nthis, the following is now an error:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml"',children:"tasks:\n  build:\n    command: 'foo build'\n    outputs:\n      - 'dist'\n\n  compile:\n    command: 'bar compile'\n    outputs:\n      - 'dist'\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The other fix, which primarily applies to ",(0,t.jsx)(n.a,{href:"/docs/commands/ci",children:(0,t.jsx)(n.code,{children:"moon ci"})})," and ",(0,t.jsx)(n.a,{href:"/docs/commands/check",children:(0,t.jsx)(n.code,{children:"moon check"})}),",\nis that a target will be skipped if one of its dependencies failed or has also been skipped.\nPreviously the target would attempt to run and most likely fail since it relied on artifacts from\nits dependencies (which don't exist). Another benefit of this change is that runs should be much\nfaster, as we're not wasting time running targets that we know will fail, which is great for CI."]}),"\n",(0,t.jsx)(n.h3,{id:"ignore-hashing-input-files",children:"Ignore hashing input files"}),"\n",(0,t.jsxs)(n.p,{children:["We're introducing 2 new settings to ",(0,t.jsx)(n.a,{href:"/docs/config/workspace",children:(0,t.jsx)(n.code,{children:".moon/workspace.yml"})})," that'll provide\nmore control over the hashing flow, ",(0,t.jsx)(n.a,{href:"/docs/config/workspace#ignorepatterns",children:(0,t.jsx)(n.code,{children:"hasher.ignorePatterns"})}),"\nand ",(0,t.jsx)(n.a,{href:"/docs/config/workspace#ignoremissingpatterns",children:(0,t.jsx)(n.code,{children:"hasher.ignoreMissingPatterns"})}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"ignorePatterns"})," setting can be used to entirely ignore a file (using glob patterns) from being\nhashed, and in turn, exclude it as an input source. For example, say we want to ignore all image\nfiles."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title=".moon/workspace.yml"',children:"hasher:\n  ignorePatterns:\n    - '**/*.{png,svg}'\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"ignoreMissingPatterns"})," setting pairs with\n",(0,t.jsx)(n.a,{href:"/docs/config/workspace#warnonmissinginputs",children:(0,t.jsx)(n.code,{children:"hasher.warnOnMissingInputs"})}),". When enabled, moon will\nlog a warning to the terminal that an input is missing. This is useful for uncovering\nmisconfigurations, but can be quite noisy when inputs are truly optional. This new setting can be\nused to filter these warnings."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title=".moon/workspace.yml"',children:"hasher:\n  warnOnMissingInputs: true\n  ignoreMissingPatterns:\n    - '**/.eslintrc.*'\n    - '**/*.config.*'\n"})}),"\n",(0,t.jsx)(n.h3,{id:"customize-base-and-head-revision",children:"Customize base and head revision"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"/docs/commands/ci",children:(0,t.jsx)(n.code,{children:"moon ci"})})," command has always supported customizing the Git base and head revisions through\nthe ",(0,t.jsx)(n.code,{children:"--base"})," and ",(0,t.jsx)(n.code,{children:"--head"})," options respectively. This was a requirement for running CI effectively,\nby comparing across branches or commits. However, the ",(0,t.jsx)(n.a,{href:"/docs/commands/run",children:(0,t.jsx)(n.code,{children:"moon run"})})," did not support this, as\nthis command was designed to primarily be run locally, but it turns out, y'all are using it in CI\ntoo!"]}),"\n",(0,t.jsxs)(n.p,{children:["To improve the effectiveness of ",(0,t.jsx)(n.code,{children:"moon run"})," in CI, we've made the following improvements, all of\nwhich require the ",(0,t.jsx)(n.code,{children:"--remote"})," option to be passed."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Added support for ",(0,t.jsx)(n.code,{children:"MOON_BASE"})," and ",(0,t.jsx)(n.code,{children:"MOON_HEAD"})," environment variables, for customizing the base and\nhead revisions respectively (also supported in ",(0,t.jsx)(n.code,{children:"moon ci"}),"). If not defined, will use the default\nbranch and ",(0,t.jsx)(n.code,{children:"HEAD"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"When the current branch is the default branch, the base revision will be the previous commit.\nUseful for commits landing on master/main."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"new-debugging-a-task-guide",children:"New debugging a task guide"}),"\n",(0,t.jsx)(n.p,{children:"Running tasks is the most common way to interact with moon, so what do you do when your task isn't\nworking as expected? Diagnose it of course! However, diagnosing the root cause of a broken task can\nbe quite daunting:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Is configuration wrong?"}),"\n",(0,t.jsx)(n.li,{children:"What about inheritance? Or merging?"}),"\n",(0,t.jsx)(n.li,{children:"Is the task platform correct?"}),"\n",(0,t.jsx)(n.li,{children:"Were tokens expanded correctly?"}),"\n",(0,t.jsx)(n.li,{children:"What about variable substitution?"}),"\n",(0,t.jsx)(n.li,{children:"So on and so forth..."}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["To help answer these questions, we're excited to publish an\n",(0,t.jsx)(n.a,{href:"/docs/guides/debug-task",children:"in-depth guide for debugging a task"}),"! These steps are the same steps we\nuse internally to diagnose reported issues, or help the Discord community. We hope you find this\nguide extremely beneficial!"]}),"\n",(0,t.jsx)("div",{class:"flex justify-center",children:(0,t.jsx)(r.A,{label:"View debugging a task guide",href:"/docs/guides/debug-task",size:"lg"})}),"\n",(0,t.jsx)(n.h2,{id:"other-changes",children:"Other changes"}),"\n",(0,t.jsxs)(n.p,{children:["View the ",(0,t.jsx)(n.a,{href:"https://github.com/moonrepo/moon/releases/tag/v1.10.0",children:"official release"})," for a full list\nof changes."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Updated ",(0,t.jsx)(n.a,{href:"/docs/commands/ci",children:(0,t.jsx)(n.code,{children:"moon ci"})})," to include a summary of all failed actions."]}),"\n",(0,t.jsx)(n.li,{children:"Updated the run report to include stderr/stdout for all attempts."}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},57434:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/v1.10-53b156788cb2d411508597208ffd8fea.png"},62696:e=>{e.exports=JSON.parse('{"permalink":"/blog/moon-v1.10","editUrl":"https://github.com/moonrepo/moon/tree/master/website/blog/2023-07-10_moon-v1.10.mdx","source":"@site/blog/2023-07-10_moon-v1.10.mdx","title":"moon v1.10 - Mid-year quality of life improvements","description":"Instead of launching a large feature this release, we\'re focusing on quality of life and developer","date":"2023-07-10T00:00:00.000Z","tags":[{"inline":true,"label":"quality","permalink":"/blog/tags/quality"},{"inline":true,"label":"life","permalink":"/blog/tags/life"},{"inline":true,"label":"qol","permalink":"/blog/tags/qol"},{"inline":true,"label":"ignore","permalink":"/blog/tags/ignore"},{"inline":true,"label":"hasher","permalink":"/blog/tags/hasher"},{"inline":true,"label":"vcs","permalink":"/blog/tags/vcs"},{"inline":true,"label":"ci","permalink":"/blog/tags/ci"},{"inline":true,"label":"debug","permalink":"/blog/tags/debug"}],"readingTime":3.77,"hasTruncateMarker":true,"authors":[{"name":"Miles Johnson","title":"Founder, developer","url":"https://github.com/milesj","imageURL":"/img/authors/miles.jpg","key":"milesj","page":null}],"frontMatter":{"slug":"moon-v1.10","title":"moon v1.10 - Mid-year quality of life improvements","authors":["milesj"],"tags":["quality","life","qol","ignore","hasher","vcs","ci","debug"],"image":"./img/moon/v1.10.png"},"unlisted":false,"prevItem":{"title":"proto v0.13 - Bun, Deno, and Go now powered by WASM plugins","permalink":"/blog/proto-v0.13"},"nextItem":{"title":"proto v0.12 - Experimental WASM plugins","permalink":"/blog/proto-v0.12"}}')}}]);