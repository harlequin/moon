"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[28046],{10482:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>q,contentTitle:()=>L,default:()=>V,frontMatter:()=>D,metadata:()=>t,toc:()=>J});const t=JSON.parse('{"id":"migrate-to-moon","title":"Migrate to moon","description":"Now that we\'ve talked about the workspace, projects, tasks, and more, we must talk about something","source":"@site/docs/migrate-to-moon.mdx","sourceDirName":".","slug":"/migrate-to-moon","permalink":"/docs/migrate-to-moon","draft":false,"unlisted":false,"editUrl":"https://github.com/moonrepo/moon/tree/master/website/docs/migrate-to-moon.mdx","tags":[],"version":"current","frontMatter":{"title":"Migrate to moon"},"sidebar":"docs","previous":{"title":"Run a task","permalink":"/docs/run-task"},"next":{"title":"Concepts","permalink":"/docs/concepts"}}');var o=s(62540),r=s(43023),i=s(91664),c=s(31898);function a(n){const e={code:"code",pre:"pre",...(0,r.R)(),...n.components};return(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-yaml",metastring:'title="<project>/moon.yml"',children:"language: 'typescript'\n\ntoolchain:\n  default: 'bun'\n\nfileGroups:\n  sources:\n    - 'src/**/*'\n    - '*.ts'\n    - 'bunfig.toml'\n  tests:\n    - 'tests/**/*'\n\ntasks:\n  dev:\n    command: 'bun run dev'\n    inputs:\n      - '@globs(sources)'\n    local: true\n  format:\n    command: 'bun run format'\n    inputs:\n      - '@globs(sources)'\n      - '@globs(tests)'\n  lint:\n    command: 'bun run lint'\n    inputs:\n      - '@globs(sources)'\n      - '@globs(tests)'\n  test:\n    command: 'bun test --bail'\n    inputs:\n      - '@globs(sources)'\n      - '@globs(tests)'\n  typecheck:\n    command: 'bun run typecheck'\n    inputs:\n      - '@globs(sources)'\n      - '@globs(tests)'\n      - 'tsconfig.json'\n      - '/tsconfig.json'\n"})})}function l(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(a,{...n})}):a(n)}function d(n){const e={code:"code",pre:"pre",...(0,r.R)(),...n.components};return(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-yaml",metastring:'title="<project>/moon.yml"',children:"language: 'typescript'\n\nfileGroups:\n  sources:\n    - 'src/**/*'\n    - 'deno.*'\n  tests:\n    - 'tests/**/*'\n\ntasks:\n  dev:\n    command: 'deno task dev'\n    inputs:\n      - '@globs(sources)'\n    local: true\n  format:\n    command: 'deno fmt --check'\n    inputs:\n      - '@globs(sources)'\n      - '@globs(tests)'\n  lint:\n    command: 'deno lint'\n    inputs:\n      - '@globs(sources)'\n      - '@globs(tests)'\n  test:\n    command: 'deno test --parallel'\n    inputs:\n      - '@globs(sources)'\n      - '@globs(tests)'\n  typecheck:\n    command: 'deno check'\n    inputs:\n      - '@globs(sources)'\n      - '@globs(tests)'\n      - 'tsconfig.json'\n      - '/tsconfig.json'\n"})})}function m(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(d,{...n})}):d(n)}function u(n){const e={code:"code",pre:"pre",...(0,r.R)(),...n.components};return(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-yaml",metastring:'title="<project>/moon.yml"',children:"language: 'go'\n\nfileGroups:\n  sources:\n    - 'cmd/**/*'\n    - 'include/**/*'\n    - 'pkg/**/*'\n\ntasks:\n  build:\n    command: 'go build -o @out(0)'\n    inputs:\n      - '@globs(sources)'\n    outputs:\n      - 'bin'\n  dev:\n    command: 'go run'\n    inputs:\n      - '@globs(sources)'\n    local: true\n  format:\n    command: 'go fmt'\n    inputs:\n      - '@globs(sources)'\n  lint:\n    command: 'staticcheck'\n    inputs:\n      - '@globs(sources)'\n      - 'staticcheck.conf'\n  test:\n    command: 'go test'\n    inputs:\n      - '@globs(sources)'\n  vet:\n    command: 'go vet'\n    inputs:\n      - '@globs(sources)'\n"})})}function p(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(u,{...n})}):u(n)}function h(n){const e={a:"a",code:"code",em:"em",p:"p",pre:"pre",...(0,r.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-yaml",metastring:'title="<project>/moon.yml"',children:"language: 'javascript'\n\nfileGroups:\n  sources:\n    - 'src/**/*'\n  tests:\n    - 'tests/**/*'\n\ntasks:\n  build:\n    command: 'webpack build --output-path @out(0)'\n    inputs:\n      - '@globs(sources)'\n      - 'webpack.config.js'\n    outputs:\n      - 'build'\n  dev:\n    command: 'webpack server'\n    inputs:\n      - '@globs(sources)'\n      - 'webpack.config.js'\n    local: true\n  format:\n    command: 'prettier --check .'\n    inputs:\n      - '@globs(sources)'\n      - '@globs(tests)'\n      - '/prettier.config.js'\n  lint:\n    command: 'eslint .'\n    inputs:\n      - '@globs(sources)'\n      - '@globs(tests)'\n      - '.eslintignore'\n      - '.eslintrc.js'\n      - '/.eslintrc.js'\n  test:\n    command: 'jest .'\n    inputs:\n      - '@globs(sources)'\n      - '@globs(tests)'\n      - 'jest.config.js'\n  typecheck:\n    command: 'tsc --build'\n    inputs:\n      - '@globs(sources)'\n      - '@globs(tests)'\n      - 'tsconfig.json'\n      - '/tsconfig.json'\n"})}),"\n",(0,o.jsxs)(e.p,{children:["To ease the migration process, we offer the\n",(0,o.jsx)(e.a,{href:"./commands/migrate/from-package-json",children:(0,o.jsx)(e.code,{children:"moon migrate from-package-json"})})," command, which will convert\na project's ",(0,o.jsx)(e.code,{children:"package.json"})," scripts into ",(0,o.jsx)(e.code,{children:"moon.yml"})," tasks, while also determining project\ndependencies (",(0,o.jsx)(e.a,{href:"./config/project#dependson",children:(0,o.jsx)(e.code,{children:"dependsOn"})}),"). This needs to be ran ",(0,o.jsx)(e.em,{children:"per project"}),"."]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-shell",children:"$ moon migrate from-package-json <project>\n"})}),"\n",(0,o.jsxs)(e.p,{children:["This command will do its best to parse and convert scripts, but this isn't always a simple 1:1\nconversion, especially when determining dependency chains. For this reason alone, we suggest\n",(0,o.jsx)(e.em,{children:"manually curating"})," tasks, but the migrate command well get you most of the way!"]})]})}function g(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(h,{...n})}):h(n)}function j(n){const e={code:"code",pre:"pre",...(0,r.R)(),...n.components};return(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-yaml",metastring:'title="<project>/moon.yml"',children:"language: 'php'\n\nfileGroups:\n  sources:\n    - 'app/**/*'\n  tests:\n    - 'tests/**/*'\n\ntasks:\n  dev:\n    command: 'php artisan serve'\n    inputs:\n      - '@globs(sources)'\n    local: true\n  format:\n    command: './vendor/bin/phpcbf .'\n    inputs:\n      - '@globs(sources)'\n      - '@globs(tests)'\n      - '.phpcs.xml'\n  lint:\n    command: './vendor/bin/phpstan analyse'\n    inputs:\n      - '@globs(sources)'\n      - '@globs(tests)'\n      - 'phpstan.neon'\n  test:\n    command: './vendor/bin/phpunit .'\n    inputs:\n      - '@globs(sources)'\n      - '@globs(tests)'\n      - 'phpunit.xml'\n"})})}function x(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(j,{...n})}):j(n)}function f(n){const e={code:"code",pre:"pre",...(0,r.R)(),...n.components};return(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-yaml",metastring:'title="<project>/moon.yml"',children:"language: 'python'\n\nfileGroups:\n  sources:\n    - 'flaskr/**/*'\n    - 'setup.py'\n  tests:\n    - 'tests/**/*'\n\ntasks:\n  dev:\n    command: 'flask run'\n    inputs:\n      - '@globs(sources)'\n    local: true\n  format:\n    command: 'black --check .'\n    inputs:\n      - '@globs(sources)'\n      - '@globs(tests)'\n      - 'pyproject.toml'\n  lint:\n    command: 'pylint .'\n    inputs:\n      - '@globs(sources)'\n      - '@globs(tests)'\n      - 'pyproject.toml'\n      - '.pylintrc'\n  test:\n    command: 'python -m unittest'\n    inputs:\n      - '@globs(sources)'\n      - '@globs(tests)'\n      - 'pyproject.toml'\n  typecheck:\n    command: 'mypy .'\n    inputs:\n      - '@globs(sources)'\n      - '@globs(tests)'\n      - 'mypy.ini'\n      - 'pyproject.toml'\n"})})}function b(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(f,{...n})}):f(n)}function y(n){const e={code:"code",pre:"pre",...(0,r.R)(),...n.components};return(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-yaml",metastring:'title="<project>/moon.yml"',children:"language: 'ruby'\n\nfileGroups:\n  sources:\n    - 'lib/**/*'\n    - 'view/**/*'\n  tests:\n    - 'spec/**/*'\n\ntasks:\n  dev:\n    command: './bin/rails server'\n    local: true\n  format:\n    command: 'rubocop -x'\n    inputs:\n      - '@globs(sources)'\n      - '@globs(tests)'\n      - '.rubocop.yml'\n  lint:\n    command: 'rubocop -l'\n    inputs:\n      - '@globs(sources)'\n      - '@globs(tests)'\n      - '.rubocop.yml'\n  test:\n    command: 'rspec'\n    inputs:\n      - '@globs(sources)'\n      - '@globs(tests)'\n      - '.rspec'\n  typecheck:\n    command: 'srb tc'\n    inputs:\n      - '@globs(sources)'\n      - '@globs(tests)'\n      - 'sorbet/config'\n"})})}function k(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(y,{...n})}):y(n)}function v(n){const e={code:"code",pre:"pre",...(0,r.R)(),...n.components};return(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-yaml",metastring:'title="<project>/moon.yml"',children:"language: 'rust'\n\nfileGroups:\n  sources:\n    - 'src/**/*'\n  tests:\n    - 'benches/**/*'\n    - 'tests/**/*'\n\ntasks:\n  build:\n    command: 'cargo build'\n    inputs:\n      - '@globs(sources)'\n      - 'Cargo.toml'\n  dev:\n    command: 'cargo run'\n    inputs:\n      - '@globs(sources)'\n      - 'Cargo.toml'\n    local: true\n  format:\n    command: 'cargo fmt --all --check'\n    inputs:\n      - '@globs(sources)'\n      - '@globs(tests)'\n      - 'Cargo.toml'\n  lint:\n    command: 'cargo clippy --workspace --all-targets'\n    inputs:\n      - '@globs(sources)'\n      - '@globs(tests)'\n      - 'Cargo.toml'\n  test:\n    command: 'cargo test --workspace'\n    inputs:\n      - '@globs(sources)'\n      - '@globs(tests)'\n      - 'Cargo.toml'\n  typecheck:\n    command: 'cargo check --workspace'\n    inputs:\n      - '@globs(sources)'\n      - '@globs(tests)'\n      - 'Cargo.toml'\n"})})}function w(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(v,{...n})}):v(n)}function R(n){const e={a:"a",blockquote:"blockquote",code:"code",em:"em",p:"p",pre:"pre",...(0,r.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(e.p,{children:["Bun provides a built-in script runner through the ",(0,o.jsxs)(e.a,{href:"https://bun.sh/docs/cli/run",children:[(0,o.jsx)(e.code,{children:"bun run"})," command"]}),".\nWhile Bun scripts are great, they're not as efficient as moon. They ",(0,o.jsx)(e.em,{children:"do not"})," support granular\ninputs, smart hashing, incremental caching, and all the other performance benefits that moon\nprovides."]}),"\n",(0,o.jsxs)(e.p,{children:["With that being said, you ",(0,o.jsx)(e.em,{children:"do not"})," have to migrate away from Bun scripts. Instead, you can simply\nrun them from within moon tasks. This gives you the best of both worlds."]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-yaml",metastring:'title="<project>/moon.yml"',children:"language: 'typescript'\n\ntasks:\n  analyze:\n    command: 'bun run analyze'\n    inputs:\n      - '@globs(sources)'\n      - '@globs(tests)'\n"})}),"\n",(0,o.jsxs)(e.blockquote,{children:["\n",(0,o.jsx)(e.p,{children:"When Bun scripts are ran through moon tasks, the current working directory is set to the project\nroot."}),"\n"]})]})}function N(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(R,{...n})}):R(n)}function C(n){const e={a:"a",blockquote:"blockquote",code:"code",em:"em",p:"p",pre:"pre",...(0,r.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(e.p,{children:["Deno provides a built-in task runner through the\n",(0,o.jsxs)(e.a,{href:"https://deno.land/manual@v1.31.1/tools/task_runner",children:[(0,o.jsx)(e.code,{children:"deno task"})," command"]}),". While Deno tasks are\ngreat, they're not as efficient as moon. They ",(0,o.jsx)(e.em,{children:"do not"})," support granular inputs, smart hashing,\nincremental caching, and all the other performance benefits that moon provides."]}),"\n",(0,o.jsxs)(e.p,{children:["With that being said, you ",(0,o.jsx)(e.em,{children:"do not"})," have to migrate away from Deno tasks. Instead, you can simply run\nthem from within moon tasks. This gives you the best of both worlds."]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-yaml",metastring:'title="<project>/moon.yml"',children:"language: 'typescript'\n\ntasks:\n  analyze:\n    command: 'deno task analyze'\n    inputs:\n      - '@globs(sources)'\n      - '@globs(tests)'\n      - 'Rakefile'\n"})}),"\n",(0,o.jsxs)(e.blockquote,{children:["\n",(0,o.jsx)(e.p,{children:"When Deno tasks are ran through moon tasks, the current working directory is set to the project\nroot."}),"\n"]})]})}function T(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(C,{...n})}):C(n)}function A(n){const e={p:"p",...(0,r.R)(),...n.components};return(0,o.jsx)(e.p,{children:"Go provides no mechanism for declaring reusable scripts. Because of this, there's no alternative to\nmoon tasks."})}function z(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(A,{...n})}):A(n)}function M(n){const e={a:"a",code:"code",em:"em",li:"li",p:"p",ul:"ul",...(0,r.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(e.p,{children:["As a frontend developer you're already familiar with the Node.js ecosystem, specifically around\ndefining and using ",(0,o.jsx)(e.code,{children:"package.json"})," scripts, and you may not want to deviate from this. Don't worry,\nsimply enable the ",(0,o.jsx)(e.a,{href:"./config/toolchain#infertasksfromscripts",children:(0,o.jsx)(e.code,{children:"node.inferTasksFromScripts"})})," setting\nto automatically create moon tasks from a project's scripts! These can then be ran with\n",(0,o.jsx)(e.a,{href:"./commands/run",children:(0,o.jsx)(e.code,{children:"moon run"})}),"."]}),"\n",(0,o.jsxs)(e.p,{children:["This implementation is a simple abstraction that runs ",(0,o.jsx)(e.code,{children:"npm run <script>"})," (or pnpm/yarn) in the\nproject directory as a child process. While this works, relying on ",(0,o.jsx)(e.code,{children:"package.json"})," scripts incurs the\nfollowing risks and disadvantages:"]}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.a,{href:"./config/project#inputs",children:"Inputs"})," default to ",(0,o.jsx)(e.code,{children:"**/*"}),":","\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"A change to every project relative file will mark the task as affected, even those not necessary\nfor the task. Granular input control is lost."}),"\n",(0,o.jsxs)(e.li,{children:["A change to workspace relative files ",(0,o.jsx)(e.em,{children:"will not"})," mark the task as affected. For example, a change\nto ",(0,o.jsx)(e.code,{children:"/prettier.config.js"})," would not be detected for a ",(0,o.jsx)(e.code,{children:"npm run format"})," script."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.a,{href:"./config/project#outputs",children:"Outputs"})," default to an empty list unless:","\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["moon will attempt to extract outputs from arguments, by looking for variations of ",(0,o.jsx)(e.code,{children:"--out"}),",\n",(0,o.jsx)(e.code,{children:"--outFile"}),", ",(0,o.jsx)(e.code,{children:"--dist-dir"}),", etc."]}),"\n",(0,o.jsx)(e.li,{children:"If no output could be determined, builds will not be cached and hydrated."}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["Tasks will always ",(0,o.jsx)(e.a,{href:"./config/project#runinci",children:"run in CI"})," unless:","\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["moon will attempt to determine invalid CI tasks by looking for popular command usage, for\nexample: ",(0,o.jsx)(e.code,{children:"webpack serve"}),", ",(0,o.jsx)(e.code,{children:"next dev"}),", ",(0,o.jsx)(e.code,{children:"--watch"})," usage, and more. This ",(0,o.jsx)(e.em,{children:"is not"})," an exhaustive\ncheck."]}),"\n",(0,o.jsxs)(e.li,{children:["The script name contains variations of ",(0,o.jsx)(e.code,{children:"dev"}),", ",(0,o.jsx)(e.code,{children:"start"}),", or ",(0,o.jsx)(e.code,{children:"serve"}),"."]}),"\n"]}),"\n"]}),"\n"]})]})}function W(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(M,{...n})}):M(n)}function I(n){const e={a:"a",code:"code",em:"em",p:"p",pre:"pre",...(0,r.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(e.p,{children:["The PHP ecosystem has standardized (somewhat) around\n",(0,o.jsx)(e.a,{href:"https://getcomposer.org/doc/articles/scripts.md#writing-custom-commands",children:"Composer scripts"})," for\nreusability. While these work, they're not as efficient as moon. They ",(0,o.jsx)(e.em,{children:"do not"})," support granular\ninputs, smart hashing, incremental caching, and all the other performance benefits that moon\nprovides."]}),"\n",(0,o.jsxs)(e.p,{children:["With that being said, you ",(0,o.jsx)(e.em,{children:"do not"})," have to migrate away from Composer. Instead, you can simply run\nthese scripts from within moon tasks. This gives you the best of both worlds."]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-yaml",metastring:'title="<project>/moon.yml"',children:"language: 'php'\n\ntasks:\n  test:\n    command: 'php composer.phar run-script test'\n    inputs:\n      - '@globs(sources)'\n      - '@globs(tests)'\n      - 'composer.json'\n"})}),"\n",(0,o.jsx)(e.p,{children:"In the future, we aim to infer these scripts automatically, and provide migration scripts."})]})}function B(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(I,{...n})}):I(n)}function G(n){const e={a:"a",code:"code",em:"em",p:"p",pre:"pre",...(0,r.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(e.p,{children:["The Python ecosystem has support for many task runners such as ",(0,o.jsx)(e.a,{href:"https://pydoit.org/",children:"doit"})," and\n",(0,o.jsx)(e.a,{href:"https://pypyr.io/",children:"pypyr"}),". While these are great, they're not as efficient as moon. They ",(0,o.jsx)(e.em,{children:"do not"}),"\nsupport granular inputs, smart hashing, incremental caching, and all the other performance benefits\nthat moon provides."]}),"\n",(0,o.jsxs)(e.p,{children:["With that being said, you ",(0,o.jsx)(e.em,{children:"do not"})," have to migrate away from these tools. Instead, you can simply\nrun their commands from within moon tasks. This gives you the best of both worlds."]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-yaml",metastring:'title="<project>/moon.yml"',children:"language: 'python'\n\ntasks:\n  test:\n    command: 'doit test'\n    inputs:\n      - '@globs(sources)'\n      - '@globs(tests)'\n      - 'pyproject.toml'\n"})})]})}function F(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(G,{...n})}):G(n)}function H(n){const e={a:"a",code:"code",em:"em",p:"p",pre:"pre",...(0,r.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(e.p,{children:["The Ruby ecosystem has standardized around the task runner ",(0,o.jsx)(e.a,{href:"https://ruby.github.io/rake/",children:"Rake"}),",\nwhich is a Makefile like system written in Ruby. While Rake is great and it accomplishes everything\nit set out to do, it's not as efficient as moon. It ",(0,o.jsx)(e.em,{children:"does not"})," support granular inputs, smart\nhashing, incremental caching, and all the other performance benefits that moon provides."]}),"\n",(0,o.jsxs)(e.p,{children:["With that being said, you ",(0,o.jsx)(e.em,{children:"do not"})," have to migrate away from Rake. Instead, you can simply run Rake\ncommands from within moon tasks. This gives you the best of both worlds."]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-yaml",metastring:'title="<project>/moon.yml"',children:"language: 'ruby'\n\ntasks:\n  test:\n    command: 'rake test'\n    inputs:\n      - '@globs(sources)'\n      - '@globs(tests)'\n      - 'Rakefile'\n"})})]})}function P(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(H,{...n})}):H(n)}function E(n){const e={code:"code",p:"p",...(0,r.R)(),...n.components};return(0,o.jsxs)(e.p,{children:["Rust, and more specifically Cargo, provides no mechanism for declaring reusable scripts in\n",(0,o.jsx)(e.code,{children:"Cargo.toml"}),". Because of this, there's no alternative to moon tasks. In the future, we may parse\nthird-party libraries like ",(0,o.jsx)(e.code,{children:"cargo-make"})," for this information."]})}function S(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(E,{...n})}):E(n)}const D={title:"Migrate to moon"},L=void 0,q={},J=[{value:"Migrate to moon tasks",id:"migrate-to-moon-tasks",level:2},{value:"Continue using scripts",id:"continue-using-scripts",level:2},{value:"Next steps",id:"next-steps",level:2}];function O(n){const e={a:"a",code:"code",em:"em",h2:"h2",p:"p",...(0,r.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.p,{children:"Now that we've talked about the workspace, projects, tasks, and more, we must talk about something\nimportant... Should you embrace moon tasks? Or keep using language/ecosystem specific scripts? Or\nboth (incremental adoption)?"}),"\n",(0,o.jsx)(e.h2,{id:"migrate-to-moon-tasks",children:"Migrate to moon tasks"}),"\n",(0,o.jsxs)(e.p,{children:["We suggest using moon tasks (of course), as they provide far more granular control and configurable\noptions than scripts, and a ",(0,o.jsx)(e.code,{children:"moon.yml"})," is a better\n",(0,o.jsx)(e.a,{href:"./faq#what-should-be-considered-the-source-of-truth",children:"source of truth"}),". Scripts aren't powerful\nenough to scale for large codebases."]}),"\n",(0,o.jsxs)(e.p,{children:["An example of what this may look like can be found below. This ",(0,o.jsx)(e.em,{children:"may"})," look like a lot, but it pays\ndividends in the long run."]}),"\n","\n",(0,o.jsxs)(c.A,{children:[(0,o.jsx)(l,{},"bun"),(0,o.jsx)(m,{},"deno"),(0,o.jsx)(p,{},"go"),(0,o.jsx)(g,{},"node"),(0,o.jsx)(x,{},"php"),(0,o.jsx)(b,{},"python"),(0,o.jsx)(k,{},"ruby"),(0,o.jsx)(w,{},"rust")]}),"\n",(0,o.jsx)(e.h2,{id:"continue-using-scripts",children:"Continue using scripts"}),"\n","\n",(0,o.jsxs)(c.A,{children:[(0,o.jsx)(N,{},"bun"),(0,o.jsx)(T,{},"deno"),(0,o.jsx)(z,{},"go"),(0,o.jsx)(W,{},"node"),(0,o.jsx)(B,{},"php"),(0,o.jsx)(F,{},"python"),(0,o.jsx)(P,{},"ruby"),(0,o.jsx)(S,{},"rust")]}),"\n",(0,o.jsx)(e.h2,{id:"next-steps",children:"Next steps"}),"\n",(0,o.jsxs)(e.p,{children:["By this point, you should have a better understanding behind moon's fundamentals! Why not adopt\nincrementally next? Jump into ",(0,o.jsx)(e.a,{href:"./guides/ci",children:"guides"})," for advanced use cases or ",(0,o.jsx)(e.a,{href:"./concepts",children:"concepts"}),"\nfor a deeper understanding."]}),"\n",(0,o.jsx)(i.A,{links:[{icon:"discord",label:"Community help & support",url:"https://discord.gg/qCh9MEynv2"},{icon:"twitter",label:"Releases & updates",url:"https://twitter.com/tothemoonrepo"}]})]})}function V(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(O,{...n})}):O(n)}},31898:(n,e,s)=>{s.d(e,{A:()=>a});var t=s(63696),o=s(73603),r=s(90899),i=s(62540);const c={bun:"Bun",deno:"Deno",go:"Go",node:"Node.js",php:"PHP",python:"Python",ruby:"Ruby",rust:"Rust"};function a(n){let{children:e,noError:s}=n;const a=(0,r.JX)(),l=t.Children.toArray(e).find((n=>!!t.isValidElement(n)&&("string"==typeof n.key&&n.key.endsWith(a))));return l?(0,i.jsx)(i.Fragment,{children:l}):s?null:(0,i.jsxs)(o.A,{type:"danger",children:["Sorry, there's no example for ",c[a]||a,". Try switching to another language for the time being!"]})}},43023:(n,e,s)=>{s.d(e,{R:()=>i,x:()=>c});var t=s(63696);const o={},r=t.createContext(o);function i(n){const e=t.useContext(r);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:i(n.components),t.createElement(r.Provider,{value:e},n.children)}},73603:(n,e,s)=>{s.d(e,{A:()=>I});var t=s(63696),o=s(62540);function r(n){const{mdxAdmonitionTitle:e,rest:s}=function(n){const e=t.Children.toArray(n),s=e.find((n=>t.isValidElement(n)&&"mdxAdmonitionTitle"===n.type)),r=e.filter((n=>n!==s)),i=s?.props.children;return{mdxAdmonitionTitle:i,rest:r.length>0?(0,o.jsx)(o.Fragment,{children:r}):null}}(n.children),r=n.title??e;return{...n,...r&&{title:r},children:s}}var i=s(11750),c=s(6590),a=s(53237);const l="admonition_WCGJ",d="admonitionHeading_GCBg",m="admonitionIcon_L39b",u="admonitionContent_pbrs";function p(n){let{type:e,className:s,children:t}=n;return(0,o.jsx)("div",{className:(0,i.A)(a.G.common.admonition,a.G.common.admonitionType(e),l,s),children:t})}function h(n){let{icon:e,title:s}=n;return(0,o.jsxs)("div",{className:d,children:[(0,o.jsx)("span",{className:m,children:e}),s]})}function g(n){let{children:e}=n;return e?(0,o.jsx)("div",{className:u,children:e}):null}function j(n){const{type:e,icon:s,title:t,children:r,className:i}=n;return(0,o.jsxs)(p,{type:e,className:i,children:[t||s?(0,o.jsx)(h,{title:t,icon:s}):null,(0,o.jsx)(g,{children:r})]})}function x(n){return(0,o.jsx)("svg",{viewBox:"0 0 14 16",...n,children:(0,o.jsx)("path",{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})})}const f={icon:(0,o.jsx)(x,{}),title:(0,o.jsx)(c.A,{id:"theme.admonition.note",description:"The default label used for the Note admonition (:::note)",children:"note"})};function b(n){return(0,o.jsx)(j,{...f,...n,className:(0,i.A)("alert alert--secondary",n.className),children:n.children})}function y(n){return(0,o.jsx)("svg",{viewBox:"0 0 12 16",...n,children:(0,o.jsx)("path",{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})})}const k={icon:(0,o.jsx)(y,{}),title:(0,o.jsx)(c.A,{id:"theme.admonition.tip",description:"The default label used for the Tip admonition (:::tip)",children:"tip"})};function v(n){return(0,o.jsx)(j,{...k,...n,className:(0,i.A)("alert alert--success",n.className),children:n.children})}function w(n){return(0,o.jsx)("svg",{viewBox:"0 0 14 16",...n,children:(0,o.jsx)("path",{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})})}const R={icon:(0,o.jsx)(w,{}),title:(0,o.jsx)(c.A,{id:"theme.admonition.info",description:"The default label used for the Info admonition (:::info)",children:"info"})};function N(n){return(0,o.jsx)(j,{...R,...n,className:(0,i.A)("alert alert--info",n.className),children:n.children})}function C(n){return(0,o.jsx)("svg",{viewBox:"0 0 16 16",...n,children:(0,o.jsx)("path",{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})})}const T={icon:(0,o.jsx)(C,{}),title:(0,o.jsx)(c.A,{id:"theme.admonition.warning",description:"The default label used for the Warning admonition (:::warning)",children:"warning"})};function A(n){return(0,o.jsx)("svg",{viewBox:"0 0 12 16",...n,children:(0,o.jsx)("path",{fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"})})}const z={icon:(0,o.jsx)(A,{}),title:(0,o.jsx)(c.A,{id:"theme.admonition.danger",description:"The default label used for the Danger admonition (:::danger)",children:"danger"})};const M={icon:(0,o.jsx)(C,{}),title:(0,o.jsx)(c.A,{id:"theme.admonition.caution",description:"The default label used for the Caution admonition (:::caution)",children:"caution"})};const W={...{note:b,tip:v,info:N,warning:function(n){return(0,o.jsx)(j,{...T,...n,className:(0,i.A)("alert alert--warning",n.className),children:n.children})},danger:function(n){return(0,o.jsx)(j,{...z,...n,className:(0,i.A)("alert alert--danger",n.className),children:n.children})}},...{secondary:n=>(0,o.jsx)(b,{title:"secondary",...n}),important:n=>(0,o.jsx)(N,{title:"important",...n}),success:n=>(0,o.jsx)(v,{title:"success",...n}),caution:function(n){return(0,o.jsx)(j,{...M,...n,className:(0,i.A)("alert alert--warning",n.className),children:n.children})}}};function I(n){const e=r(n),s=(t=e.type,W[t]||(console.warn(`No admonition component found for admonition type "${t}". Using Info as fallback.`),W.info));var t;return(0,o.jsx)(s,{...e})}},90899:(n,e,s)=>{s.d(e,{Ay:()=>d,JX:()=>l});var t=s(63696),o=s(49519),r=s(62540);const i=["/docs/install","/docs/setup-workspace","/docs/setup-toolchain","/docs/create-project","/docs/create-task","/docs/run-task","/docs/migrate-to-moon"];function c(){return"undefined"!=typeof window&&"localStorage"in window}function a(){return(c()?localStorage.getItem("moonrepo.language"):null)??"node"}function l(){const[n,e]=(0,t.useState)(a());return(0,t.useEffect)((()=>{const n=n=>{e(n.detail)};return window.addEventListener("onMoonrepoChangeLanguage",n),()=>{window.removeEventListener("onMoonrepoChangeLanguage",n)}})),n}function d(){const[n,e]=(0,t.useState)(a()),s=(0,o.zy)(),l=(0,t.useCallback)((n=>{let{target:s}=n;const t=s.value;if(e(t),c())try{localStorage.setItem("moonrepo.language",t)}catch{}window.dispatchEvent(new CustomEvent("onMoonrepoChangeLanguage",{bubbles:!0,detail:t}))}),[]);return i.some((n=>s.pathname.startsWith(n)))?(0,r.jsxs)("select",{value:n,onChange:l,className:"outline-none min-w-0 bg-white border border-solid border-gray-400 dark:border-transparent rounded-md p-0.5 text-sm text-gray-800 placeholder-gray-600 h-full font-sans",children:[(0,r.jsx)("option",{value:"bun",children:"Bun"}),(0,r.jsx)("option",{value:"deno",children:"Deno"}),(0,r.jsx)("option",{value:"go",children:"Go"}),(0,r.jsx)("option",{value:"node",children:"Node.js"}),(0,r.jsx)("option",{value:"php",children:"PHP"}),(0,r.jsx)("option",{value:"python",children:"Python"}),(0,r.jsx)("option",{value:"ruby",children:"Ruby"}),(0,r.jsx)("option",{value:"rust",children:"Rust"})]}):null}},91664:(n,e,s)=>{s.d(e,{A:()=>a});var t=s(45968),o=s(74599),r=s(62540);const i={discord:"carbon:logo-discord",github:"carbon:logo-github",moon:"material-symbols:moon-stars","new-project":"material-symbols:add-box","new-task":"material-symbols:add-circle",project:"material-symbols:inbox","project-config":"material-symbols:inbox-customize","project-config-global":"material-symbols:inbox-customize","project-graph":"material-symbols:flowchart","run-task":"material-symbols:play-circle",task:"material-symbols:circle","task-config":"material-symbols:build-circle",token:"material-symbols:code",toolchain:"material-symbols:service-toolbox","toolchain-config":"material-symbols:settings-alert",twitter:"carbon:logo-twitter",workspace:"material-symbols:graph-5","workspace-config":"material-symbols:settings"};function c(n){let{name:e,...s}=n;return(0,r.jsx)(o.A,{...s,icon:i[e]})}function a(n){let{links:e}=n;return(0,r.jsx)("div",{className:"grid grid-cols-1 gap-2 sm:grid-cols-2",children:e.map((n=>(0,r.jsx)(t.A,{href:n.url,className:"focus:outline-none",children:(0,r.jsxs)("div",{className:"relative rounded-lg px-3 py-3 flex items-center space-x-2 border-solid border border-t-0 border-b-2 bg-gray-50 hover:bg-gray-100/90 border-gray-200/75 dark:bg-slate-700 dark:hover:bg-slate-600 dark:border-slate-900/75",children:[(0,r.jsx)("div",{className:"flex-shrink-0",style:{marginBottom:-7},children:(0,r.jsx)(c,{width:"1.5em",name:n.icon})}),(0,r.jsx)("div",{className:"flex-1 min-w-0 text-gray-900 dark:text-gray-100",children:n.label})]})},n.url)))})}}}]);