"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[72606],{43023:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>l});var t=o(63696);const i={},s=t.createContext(i);function r(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(s.Provider,{value:n},e.children)}},65162:(e,n,o)=>{o.d(n,{A:()=>l});var t=o(11750),i=o(74599),s=o(62540);const r={failure:"bg-red-100 text-red-900",info:"bg-pink-100 text-pink-900",success:"bg-green-100 text-green-900",warning:"bg-orange-100 text-orange-900"};function l(e){let{className:n,icon:o,text:l,variant:d}=e;return(0,s.jsxs)("span",{className:(0,t.A)("inline-flex items-center px-1 py-0.5 rounded text-xs font-bold uppercase",d?r[d]:"bg-gray-100 text-gray-800",n),children:[o&&(0,s.jsx)(i.A,{icon:o,className:"mr-1"}),l]})}},68259:(e,n,o)=>{o.d(n,{A:()=>s});var t=o(65162),i=o(62540);function s(e){let{text:n}=e;return(0,i.jsx)(t.A,{text:n,icon:"material-symbols:clock-loader-40",variant:"success",className:"absolute right-0 top-1.5"})}},82943:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>p,frontMatter:()=>l,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"proto/detection","title":"Version detection","description":"The most powerful feature in proto is its contextual version detection, that is triggered with","source":"@site/docs/proto/detection.mdx","sourceDirName":"proto","slug":"/proto/detection","permalink":"/docs/proto/detection","draft":false,"unlisted":false,"editUrl":"https://github.com/moonrepo/moon/tree/master/website/docs/proto/detection.mdx","tags":[],"version":"current","frontMatter":{"title":"Version detection","toc_max_heading_level":6},"sidebar":"proto","previous":{"title":"Tool specification","permalink":"/docs/proto/tool-spec"},"next":{"title":"Supported tools","permalink":"/docs/proto/tools"}}');var i=o(62540),s=o(43023),r=o(68259);const l={title:"Version detection",toc_max_heading_level:6},d=void 0,c={},a=[{value:"1. Version is explicitly passed as a command line argument",id:"1-version-is-explicitly-passed-as-a-command-line-argument",level:4},{value:"2. Version is provided with the <code>PROTO_*_VERSION</code> environment variable",id:"2-version-is-provided-with-the-proto__version-environment-variable",level:4},{value:"3. Version is located by traversing the file system",id:"3-version-is-located-by-traversing-the-file-system",level:4},{value:"3.1. Version is defined locally in <code>.prototools</code>",id:"31-version-is-defined-locally-in-prototools",level:5},{value:"3.2. Version is defined in the tool&#39;s ecosystem",id:"32-version-is-defined-in-the-tools-ecosystem",level:5},{value:"4. Version is defined globally",id:"4-version-is-defined-globally",level:4},{value:"5. Version <em>could not</em> be detected",id:"5-version-could-not-be-detected",level:4}];function h(e){const n={a:"a",code:"code",em:"em",h4:"h4",h5:"h5",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.A,{text:"2 min"}),"\n",(0,i.jsxs)(n.p,{children:["The most powerful feature in proto is its contextual version detection, that is triggered with\n",(0,i.jsx)(n.a,{href:"./commands/run",children:(0,i.jsx)(n.code,{children:"proto run"})}),", ",(0,i.jsx)(n.a,{href:"./commands/bin",children:(0,i.jsx)(n.code,{children:"proto bin"})}),", or when a shim is executed. So what\ndoes this mean exactly? Before a tool in proto's toolchain can be executed, we need to determine the\nversion of the tool to execute with. If a detected version exists locally, we proceed using that\nbinary, otherwise we fail with a missing installation error."]}),"\n",(0,i.jsx)(n.p,{children:"When detecting a version, the following steps are checked, in the order as listed:"}),"\n",(0,i.jsx)(n.h4,{id:"1-version-is-explicitly-passed-as-a-command-line-argument",children:"1. Version is explicitly passed as a command line argument"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"$ proto run node 18.0.0\n"})}),"\n",(0,i.jsxs)(n.h4,{id:"2-version-is-provided-with-the-proto__version-environment-variable",children:["2. Version is provided with the ",(0,i.jsx)(n.code,{children:"PROTO_*_VERSION"})," environment variable"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"$ PROTO_NODE_VERSION=18.0.0 proto run node\n"})}),"\n",(0,i.jsx)(n.h4,{id:"3-version-is-located-by-traversing-the-file-system",children:"3. Version is located by traversing the file system"}),"\n",(0,i.jsx)(n.p,{children:"This step will attempt to find a configuration or manifest file in the current working directory,\nand traverse upwards through parent directories (stops at the user's home directory) until a file is\nfound."}),"\n",(0,i.jsxs)(n.h5,{id:"31-version-is-defined-locally-in-prototools",children:["3.1. Version is defined locally in ",(0,i.jsx)(n.code,{children:".prototools"})]}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.code,{children:".prototools"}),' file was found and a version entry exists for the current tool. This is also known\nas a "local version" and can be created with ',(0,i.jsx)(n.a,{href:"./commands/pin",children:(0,i.jsx)(n.code,{children:"proto pin"})}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-toml",metastring:'title=".prototools"',children:'node = "18.0.0"\n'})}),"\n",(0,i.jsx)(n.h5,{id:"32-version-is-defined-in-the-tools-ecosystem",children:"3.2. Version is defined in the tool's ecosystem"}),"\n",(0,i.jsxs)(n.p,{children:["Depending on the tool, a version is extracted from a found file unique to that tool's ecosystem.\nThis includes version manager configs (",(0,i.jsx)(n.code,{children:".nvmrc"}),", etc), manifest files (",(0,i.jsx)(n.code,{children:"package.json"}),", etc), and\nmore."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",metastring:'title=".nvmrc"',children:"18.0.0\n"})}),"\n",(0,i.jsx)(n.h4,{id:"4-version-is-defined-globally",children:"4. Version is defined globally"}),"\n",(0,i.jsxs)(n.p,{children:['As the last check, we look for a "global version" that was pinned with\n',(0,i.jsx)(n.a,{href:"./commands/pin",children:(0,i.jsx)(n.code,{children:"proto pin --global"})})," or ",(0,i.jsx)(n.a,{href:"./commands/install",children:(0,i.jsx)(n.code,{children:"proto install --pin"})}),". This version\nis stored at ",(0,i.jsx)(n.code,{children:"~/.proto/.prototools"}),"."]}),"\n",(0,i.jsxs)(n.h4,{id:"5-version-could-not-be-detected",children:["5. Version ",(0,i.jsx)(n.em,{children:"could not"})," be detected"]}),"\n",(0,i.jsx)(n.p,{children:"If all the previous steps have failed, then we could not detect an applicable version, and the\nprocess will fail."})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}}}]);