"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[74197],{3453:(e,n,i)=>{i.d(n,{A:()=>o});const o=i.p+"assets/images/v1.26-396c2d67a1fd24c4101aef12adb5a73b.png"},10122:e=>{e.exports=JSON.parse('{"permalink":"/blog/moon-v1.26","editUrl":"https://github.com/moonrepo/moon/tree/master/website/blog/2024-06-24_moon-v1.26.mdx","source":"@site/blog/2024-06-24_moon-v1.26.mdx","title":"moon v1.26 - New experimental pipeline, trace profiles, and more","description":"In this release, we focused primarily on a next-generation actions pipeline.","date":"2024-06-24T00:00:00.000Z","tags":[{"inline":true,"label":"action","permalink":"/blog/tags/action"},{"inline":true,"label":"pipeline","permalink":"/blog/tags/pipeline"},{"inline":true,"label":"trace","permalink":"/blog/tags/trace"},{"inline":true,"label":"profile","permalink":"/blog/tags/profile"},{"inline":true,"label":"shell","permalink":"/blog/tags/shell"}],"readingTime":2.51,"hasTruncateMarker":true,"authors":[{"name":"Miles Johnson","title":"Founder, developer","url":"https://github.com/milesj","imageURL":"/img/authors/miles.jpg","key":"milesj","page":null}],"frontMatter":{"slug":"moon-v1.26","title":"moon v1.26 - New experimental pipeline, trace profiles, and more","authors":["milesj"],"tags":["action","pipeline","trace","profile","shell"],"image":"./img/moon/v1.26.png"},"unlisted":false,"prevItem":{"title":"proto v0.38 - Shell activation / hooks","permalink":"/blog/proto-v0.38"},"nextItem":{"title":"proto v0.37 - Calver support and self diagnosis","permalink":"/blog/proto-v0.37"}}')},28354:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var o=i(10122),t=i(62540),l=i(43023);const s={slug:"moon-v1.26",title:"moon v1.26 - New experimental pipeline, trace profiles, and more",authors:["milesj"],tags:["action","pipeline","trace","profile","shell"],image:"./img/moon/v1.26.png"},r=void 0,a={image:i(3453).A,authorsImageUrls:[void 0]},c=[{value:"New experimental pipeline",id:"new-experimental-pipeline",level:2},{value:"Generate trace profiles",id:"generate-trace-profiles",level:2},{value:"Additional shell support",id:"additional-shell-support",level:2},{value:"Other changes",id:"other-changes",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"In this release, we focused primarily on a next-generation actions pipeline."}),"\n",(0,t.jsx)(n.h2,{id:"new-experimental-pipeline",children:"New experimental pipeline"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"/docs/how-it-works/action-graph",children:"action pipeline"}),' or just "pipeline", is the system in which we\nactually run tasks in topological order when ',(0,t.jsx)(n.a,{href:"/docs/commands/run",children:(0,t.jsx)(n.code,{children:"moon run"})}),",\n",(0,t.jsx)(n.a,{href:"/docs/commands/check",children:(0,t.jsx)(n.code,{children:"moon check"})}),", or ",(0,t.jsx)(n.a,{href:"/docs/commands/ci",children:(0,t.jsx)(n.code,{children:"moon ci"})})," is executed. The pipeline is\npowered by the ",(0,t.jsx)(n.a,{href:"/docs/how-it-works/action-graph",children:"action graph"})," (also known as a task graph or\ndependency graph) and is quite complex, as we need to efficiently run tasks on our thread pool,\nensure dependency tasks are ran before running dependent tasks, handle signals (ctrl + c), and much\nmore."]}),"\n",(0,t.jsxs)(n.p,{children:['Our current implementation "works" but could be much better, as it still has some problematic edge\ncases, ',(0,t.jsx)(n.a,{href:"https://github.com/moonrepo/moon/issues/902",children:"doesn't always shutdown correctly"}),", and is\npretty much tech debt at this point. To remedy this, we spent the last month working on a new action\npipeline that aims to solve all of these problems, with a more modern implementation. Some such\nimprovements are:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Increased performance with better concurrency handling and scheduling. Threads in the pool should\nnow be constantly utilized."}),"\n",(0,t.jsx)(n.li,{children:"More accurately monitors signals (ctrl+c) and shutdowns. We now use Rust channels internally to\nmanage this state."}),"\n",(0,t.jsx)(n.li,{children:"The CLI will now wait for aborted/cancelled task handles to exit before the entire CLI exits. This\nshould alleviate zombie processes."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"With all that said, unlike previous releases that replaced the old feature with a new feature, we\nchose to gate this new pipeline behind an experimental flag. We want to ensure this works correctly\nin all cases, before enabling it by default. So please test it and report back any issues! We've\nsuccessfully been using it on moon's repository without issue."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title=".moon/workspace.yml"',children:"experiments:\n  actionPipelineV2: true\n"})}),"\n",(0,t.jsx)(n.h2,{id:"generate-trace-profiles",children:"Generate trace profiles"}),"\n",(0,t.jsxs)(n.p,{children:["A major goal of moon is to be extremely efficient and to optimize as much as possible. To help\naccomplish this goal, we're introducing the global CLI ",(0,t.jsx)(n.code,{children:"--dump"})," flag, which will generate a trace\nprofile that can be loaded and reviewed in ",(0,t.jsx)(n.code,{children:"chrome://tracing"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"This will display a flame graph with labeled operations, their timing information, and any\nassociated data. This is the first step in capturing this kind of information, and it will only get\nbetter moving forward."}),"\n",(0,t.jsx)(n.h2,{id:"additional-shell-support",children:"Additional shell support"}),"\n",(0,t.jsxs)(n.p,{children:["Based on the work in ",(0,t.jsx)(n.a,{href:"/proto",children:"proto"}),", we now have built-in support for additional command line\nshells. To start, we've updated the ",(0,t.jsx)(n.a,{href:"/docs/config/project#unixshell",children:(0,t.jsx)(n.code,{children:"unixShell"})})," and\n",(0,t.jsx)(n.a,{href:"/docs/config/project#windowsshell",children:(0,t.jsx)(n.code,{children:"windowsShell"})})," task options to support the following new\nshells:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Unix: ",(0,t.jsx)(n.code,{children:"ion"}),", ",(0,t.jsx)(n.code,{children:"nu"})," (nushell), ",(0,t.jsx)(n.code,{children:"pwsh"})," (powershell), ",(0,t.jsx)(n.code,{children:"xonsh"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Windows: ",(0,t.jsx)(n.code,{children:"elvish"}),", ",(0,t.jsx)(n.code,{children:"fish"}),", ",(0,t.jsx)(n.code,{children:"nu"})," (nushell), ",(0,t.jsx)(n.code,{children:"xonsh"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["And furthermore, we've added Nushell completion support to the\n",(0,t.jsx)(n.a,{href:"/docs/commands/completions",children:(0,t.jsx)(n.code,{children:"moon completions"})})," command!"]}),"\n",(0,t.jsx)(n.h2,{id:"other-changes",children:"Other changes"}),"\n",(0,t.jsxs)(n.p,{children:["View the ",(0,t.jsx)(n.a,{href:"https://github.com/moonrepo/moon/releases/tag/v1.26.0",children:"official release"})," for a full list\nof changes."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Updated CLI command execution to be more performant, and to reduce our usage of concurrent locks."}),"\n",(0,t.jsx)(n.li,{children:"Updated proto to v0.37.1 (from v0.36.2)."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},43023:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>r});var o=i(63696);const t={},l=o.createContext(t);function s(e){const n=o.useContext(l);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),o.createElement(l.Provider,{value:n},e.children)}}}]);