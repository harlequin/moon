"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[28094],{42392:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"guides/root-project","title":"Root-level project","description":"Coming from other repositories or task runner, you may be familiar with tasks available at the","source":"@site/docs/guides/root-project.mdx","sourceDirName":"guides","slug":"/guides/root-project","permalink":"/docs/guides/root-project","draft":false,"unlisted":false,"editUrl":"https://github.com/moonrepo/moon/tree/master/website/docs/guides/root-project.mdx","tags":[],"version":"current","frontMatter":{"title":"Root-level project"},"sidebar":"guides","previous":{"title":"Remote caching","permalink":"/docs/guides/remote-cache"},"next":{"title":"Sharing workspace configuration","permalink":"/docs/guides/sharing-config"}}');var s=t(62540),r=t(43023);const i={title:"Root-level project"},a=void 0,c={},l=[{value:"Caveats",id:"caveats",level:2},{value:"Greedy inputs",id:"greedy-inputs",level:3},{value:"Inherited tasks",id:"inherited-tasks",level:3}];function d(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Coming from other repositories or task runner, you may be familiar with tasks available at the\nrepository root, in which one-off, organization, maintenance, or process oriented tasks can be ran.\nmoon supports this through a concept known as a root-level project."}),"\n",(0,s.jsxs)(n.p,{children:["Begin by adding the root to ",(0,s.jsx)(n.a,{href:"../config/workspace#projects",children:(0,s.jsx)(n.code,{children:"projects"})})," with a source value of ",(0,s.jsx)(n.code,{children:"."}),"\n(current directory relative from the workspace)."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'title=".moon/workspace.yml"',children:"# As a map\nprojects:\n  root: '.'\n\n# As a list of globs\nprojects:\n  - '.'\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"When using globs, the root project's name will be inferred from the repository folder name. Be\nwary of this as it can change based on what a developer has checked out as."}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Once added, create a ",(0,s.jsx)(n.a,{href:"../config/project",children:(0,s.jsx)(n.code,{children:"moon.yml"})})," in the root of the repository. From here you\ncan define tasks that can be ran using this new root-level project name, for example,\n",(0,s.jsx)(n.code,{children:"moon run root:<task>"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml"',children:"tasks:\n  versionCheck:\n    command: 'yarn version check'\n    inputs: []\n    options:\n      cache: false\n"})}),"\n",(0,s.jsx)(n.p,{children:"And that's it, but there are a few caveats to be aware of..."}),"\n",(0,s.jsx)(n.h2,{id:"caveats",children:"Caveats"}),"\n",(0,s.jsx)(n.h3,{id:"greedy-inputs",children:"Greedy inputs"}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsxs)(n.p,{children:["In moon v1.24, root-level tasks default to no inputs. In previous versions, inputs defaulted to\n",(0,s.jsx)(n.code,{children:"**/*"}),". This section is only applicable for older moon versions!"]})}),"\n",(0,s.jsxs)(n.p,{children:["Task ",(0,s.jsx)(n.a,{href:"../config/project#inputs",children:(0,s.jsx)(n.code,{children:"inputs"})})," default to ",(0,s.jsx)(n.code,{children:"**/*"}),", which would result in root-level tasks\nscanning ",(0,s.jsx)(n.em,{children:"all"})," files in the repository. This will be a very expensive operation! We suggest\nrestricting inputs to a very succinct whitelist, or disabling inputs entirely."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml"',children:"tasks:\n  oneOff:\n    # ...\n    inputs: []\n"})}),"\n",(0,s.jsx)(n.h3,{id:"inherited-tasks",children:"Inherited tasks"}),"\n",(0,s.jsxs)(n.p,{children:["Because a root project is still a project in the workspace, it will inherit all tasks defined in\n",(0,s.jsx)(n.a,{href:"../config/tasks",children:(0,s.jsx)(n.code,{children:".moon/tasks.yml"})}),", which may be unexpected. To mitigate this, you can exclude\nsome or all of these tasks in the root config with\n",(0,s.jsx)(n.a,{href:"../config/project#inheritedtasks",children:(0,s.jsx)(n.code,{children:"workspace.inheritedTasks"})}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml"',children:"workspace:\n  inheritedTasks:\n    include: []\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},43023:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var o=t(63696);const s={},r=o.createContext(s);function i(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);